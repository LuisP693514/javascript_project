/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

eval("const Player = __webpack_require__(/*! ./scripts/player.js */ \"./src/scripts/player.js\");\nconst Enemy = __webpack_require__(/*! ./scripts/enemy.js */ \"./src/scripts/enemy.js\");\nconst BulletController = __webpack_require__(/*! ./scripts/bulletController.js */ \"./src/scripts/bulletController.js\");\nconst EnemyController = __webpack_require__(/*! ./scripts/enemyController.js */ \"./src/scripts/enemyController.js\");\nconst HUD = __webpack_require__(/*! ./scripts/hud.js */ \"./src/scripts/hud.js\");\nconst Squishy = __webpack_require__(/*! ./scripts/squish.js */ \"./src/scripts/squish.js\");\n\n// Grabbing the canvas elements\nconst field = document.getElementById(\"contents\");\nconst bg = document.getElementById(\"backGround\");\nconst hud = document.getElementById(\"HUD\");\n\n// Grabbing the context for each canvas\nconst fieldCtx = field.getContext(\"2d\");\nconst bgCtx = bg.getContext(\"2d\");\nconst hudCtx = hud.getContext(\"2d\");\nconst rect = field.getBoundingClientRect();\n\n// Fix up the resolution of these canvas-es\n\nfixResolution(field, fieldCtx);\nfixResolution(bg, bgCtx);\nfixResolution(hud, hudCtx);\n\n//Creating new instances for the game\nlet plBC = new BulletController(field); // field layer is where the game takes place\nlet enemyController = new EnemyController(field);\nlet player = new Player(rect.width / 2, rect.height / 2, plBC, {\n  strokeColor: \"green\",\n  canvas: field\n});\nconst hudInterface = new HUD(hud, player);\n\n// Variables to keep the game going\nlet gameLoop;\nlet bossSpawned;\nlet wave = 0;\nlet countDownCountedDown;\nlet newWaveJustStarted = true;\nlet timer;\nlet guns = [];\nlet timerIsSet = true;\nlet timeBetweenWaves = 20000; // milliseconds\nlet muted = false;\nenemyController.createEnemies(wave);\n\n// The gameplay loop starts here\nfunction play() {\n  defaultStyle();\n  let currentTotalEnemyHealth = 0;\n  let totalEnemyMaxHealth = 0;\n  muted = player.muted;\n  if (newWaveJustStarted) {\n    if (wave === 5) bossSpawned = true;\n    newWaveJustStarted = false;\n    timer = setTimeout(() => {\n      countDownCountedDown = true;\n    }, timeBetweenWaves);\n  }\n\n  // Clear the frame\n  fieldCtx.clearRect(0, 0, field.width, field.height);\n  hudCtx.clearRect(0, 0, hud.width, hud.height);\n\n  // Start drawing the new frame\n  plBC.draw(fieldCtx);\n  enemyController.enemies.forEach(enemy => {\n    if (enemy.health > 0) {\n      plBC.collidesWith(enemy, {\n        muted: muted\n      });\n      enemy.draw(fieldCtx, {\n        muted: muted\n      });\n      currentTotalEnemyHealth += enemy.health;\n      totalEnemyMaxHealth += enemy.maxHp;\n      if (!guns.includes(enemy.bulletController)) {\n        guns.push(enemy.bulletController);\n      }\n    } else {\n      enemyController.enemies.splice(enemyController.enemies.indexOf(enemy), 1);\n    }\n  });\n  guns.forEach(gun => {\n    gun.collidesWith(player, {\n      muted: muted\n    });\n    gun.draw(fieldCtx);\n  });\n  if (player.health > 0) {\n    player.draw(fieldCtx);\n  } else {\n    player = null;\n    gameOver();\n  }\n  hudInterface.draw();\n  if (currentTotalEnemyHealth > 0 && bossSpawned) {\n    hudInterface.drawBossHp(currentTotalEnemyHealth, totalEnemyMaxHealth);\n  }\n  if (enemyController.enemies.length < 1 || countDownCountedDown) {\n    clearTimeout(timer);\n    countDownCountedDown = false;\n    if (bossSpawned && enemyController.enemies.length < 1) {\n      bossSpawned = false;\n      gameOver();\n    }\n    if (timerIsSet && !bossSpawned) {\n      timerIsSet = false;\n      setTimeout(() => {\n        wave += 1;\n        newWaveJustStarted = true;\n        timerIsSet = true;\n        enemyController.createEnemies(wave);\n        if (enemyController.enemies.length < 1) guns.splice(0);\n      }, 2000);\n    }\n  }\n}\n\n// Customize styles for gameplay layer\nfunction defaultStyle() {\n  fieldCtx.shadowColor = \"blue\";\n  fieldCtx.shadowBlur = 30;\n}\n\n// gameLoop = setInterval(play, 1000 / 60);\n\nfunction fixResolution(canvas, ctx) {\n  const dpr = window.devicePixelRatio || 1;\n  const rect = canvas.getBoundingClientRect();\n  canvas.width = rect.width * dpr;\n  canvas.height = rect.height * dpr;\n  ctx.scale(dpr, dpr);\n  canvas.style.width = `${rect.width}px`;\n  canvas.style.height = `${rect.height}px`;\n  ctx.imageSmoothingEnabled = true;\n}\nfunction gameOver() {\n  clearInterval(gameLoop);\n  player = null;\n  hudInterface.renderGameover();\n}\nlet titleLoop;\nfunction titleScreen() {\n  hudCtx.clearRect(0, 0, hud.width, hud.height);\n  const gradientBg = hudCtx.createLinearGradient(0, 0, 0, hud.height);\n  gradientBg.addColorStop(0, \"#23353D\");\n  gradientBg.addColorStop(1, \"#0C337A\");\n  hudCtx.fillStyle = gradientBg;\n  hudCtx.fillRect(0, 0, hud.width, hud.height);\n  hudInterface.drawTitleScreen();\n  if (hudInterface.playerPressedPlay) {\n    hudInterface.playerPressedPlay = false;\n    clearInterval(titleLoop);\n    // If player is dead, start a new game\n    if (player === null) {\n      plBC = null;\n      plBC = new BulletController(field);\n      player = new Player(rect.width / 2, rect.height / 2, plBC, {\n        strokeColor: \"green\",\n        canvas: field,\n        muted: muted\n      });\n      hudInterface.player = player;\n      wave = 0;\n      bossSpawned = null;\n      countDownCountedDown = null;\n      guns = [];\n      timer = null;\n      newWaveJustStarted = true;\n      timerIsSet = true;\n      enemyController = null;\n      enemyController = new EnemyController(field);\n      enemyController.createEnemies(wave);\n    }\n    const escapeFunc = e => {\n      e.preventDefault();\n      if (e.code === \"Escape\") {\n        clearInterval(gameLoop);\n        titleLoop = setInterval(titleScreen, 1000 / 60);\n        removeEventListener(\"keydown\", escapeFunc);\n      }\n    };\n    addEventListener(\"keydown\", escapeFunc);\n    gameLoop = setInterval(play, 1000 / 60);\n  }\n  ;\n}\ntitleLoop = setInterval(titleScreen, 1000 / 60);\n\n// Background image\n\nconst img = new Image();\n\n// User Variables - customize these to change the image being scrolled, its\n// direction, and the speed.\nimg.src = \"./images/Clouds/Clouds3/3.png\";\nconst canvasXSize = rect.width;\nconst canvasYSize = rect.height;\nconst speed = 10; // lower is faster\nconst scale = 2.5;\nconst y = -4.5; // vertical offset\n\n// Main program\nconst dx = 0.75;\nlet imgW;\nlet imgH;\nlet x = 0;\nlet clearX;\nlet clearY;\nimg.onload = () => {\n  imgW = img.width * scale;\n  imgH = img.height * scale;\n  if (imgW > canvasXSize) {\n    // Image larger than canvas\n    x = canvasXSize - imgW;\n  }\n\n  // Check if image dimension is larger than canvas\n  clearX = Math.max(imgW, canvasXSize);\n  clearY = Math.max(imgH, canvasYSize);\n\n  // Get canvas context\n\n  // Set refresh rate\n  return setInterval(drawBackground, speed);\n};\nfunction drawBackground() {\n  bgCtx.clearRect(0, 0, clearX, clearY); // clear the canvas\n\n  // If image is <= canvas size\n  if (imgW <= canvasXSize) {\n    // Reset, start from beginning\n    if (x > canvasXSize) {\n      x = -imgW + x;\n    }\n\n    // Draw additional image1\n    if (x > 0) {\n      bgCtx.drawImage(img, -imgW + x, y, imgW, imgH);\n    }\n\n    // Draw additional image2\n    if (x - imgW > 0) {\n      bgCtx.drawImage(img, -imgW * 2 + x, y, imgW, imgH);\n    }\n  } else {\n    // Image is > canvas size\n    // Reset, start from beginning\n    if (x > canvasXSize) {\n      x = canvasXSize - imgW;\n    }\n\n    // Draw additional image\n    if (x > canvasXSize - imgW) {\n      bgCtx.drawImage(img, x - imgW + 1, y, imgW, imgH);\n    }\n  }\n\n  // Draw image\n  bgCtx.drawImage(img, x, y, imgW, imgH);\n\n  // Amount to move\n  x += dx;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUNRLElBQUksR0FBRyxDQUFDLEdBQUdFLENBQUMsRUFBRUosQ0FBQyxFQUFFRSxJQUFJLEVBQUVDLElBQUksQ0FBQztJQUN0RDtFQUNKLENBQUMsTUFBTTtJQUNIO0lBQ0E7SUFDQSxJQUFJQyxDQUFDLEdBQUdQLFdBQVcsRUFBRTtNQUNqQk8sQ0FBQyxHQUFHUCxXQUFXLEdBQUdLLElBQUk7SUFDMUI7O0lBRUE7SUFDQSxJQUFJRSxDQUFDLEdBQUdQLFdBQVcsR0FBR0ssSUFBSSxFQUFFO01BQ3hCbEYsS0FBSyxDQUFDMkYsU0FBUyxDQUFDakIsR0FBRyxFQUFFVSxDQUFDLEdBQUdGLElBQUksR0FBRyxDQUFDLEVBQUVGLENBQUMsRUFBRUUsSUFBSSxFQUFFQyxJQUFJLENBQUM7SUFDckQ7RUFDSjs7RUFFQTtFQUNBbkYsS0FBSyxDQUFDMkYsU0FBUyxDQUFDakIsR0FBRyxFQUFFVSxDQUFDLEVBQUVKLENBQUMsRUFBRUUsSUFBSSxFQUFFQyxJQUFJLENBQUM7O0VBRXRDO0VBQ0FDLENBQUMsSUFBSUgsRUFBRTtBQUNYIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vanMvLi9zcmMvaW5kZXguanM/YjYzNSJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBQbGF5ZXIgPSByZXF1aXJlKFwiLi9zY3JpcHRzL3BsYXllci5qc1wiKTtcbmNvbnN0IEVuZW15ID0gcmVxdWlyZShcIi4vc2NyaXB0cy9lbmVteS5qc1wiKTtcbmNvbnN0IEJ1bGxldENvbnRyb2xsZXIgPSByZXF1aXJlKFwiLi9zY3JpcHRzL2J1bGxldENvbnRyb2xsZXIuanNcIik7XG5jb25zdCBFbmVteUNvbnRyb2xsZXIgPSByZXF1aXJlKFwiLi9zY3JpcHRzL2VuZW15Q29udHJvbGxlci5qc1wiKTtcbmNvbnN0IEhVRCA9IHJlcXVpcmUoXCIuL3NjcmlwdHMvaHVkLmpzXCIpO1xuY29uc3QgU3F1aXNoeSA9IHJlcXVpcmUoXCIuL3NjcmlwdHMvc3F1aXNoLmpzXCIpO1xuXG4vLyBHcmFiYmluZyB0aGUgY2FudmFzIGVsZW1lbnRzXG5jb25zdCBmaWVsZCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiY29udGVudHNcIik7XG5jb25zdCBiZyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiYmFja0dyb3VuZFwiKTtcbmNvbnN0IGh1ZCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiSFVEXCIpO1xuXG4vLyBHcmFiYmluZyB0aGUgY29udGV4dCBmb3IgZWFjaCBjYW52YXNcbmNvbnN0IGZpZWxkQ3R4ID0gZmllbGQuZ2V0Q29udGV4dChcIjJkXCIpO1xuY29uc3QgYmdDdHggPSBiZy5nZXRDb250ZXh0KFwiMmRcIik7XG5jb25zdCBodWRDdHggPSBodWQuZ2V0Q29udGV4dChcIjJkXCIpO1xuY29uc3QgcmVjdCA9IGZpZWxkLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xuXG4vLyBGaXggdXAgdGhlIHJlc29sdXRpb24gb2YgdGhlc2UgY2FudmFzLWVzXG5cbmZpeFJlc29sdXRpb24oZmllbGQsIGZpZWxkQ3R4KTtcbmZpeFJlc29sdXRpb24oYmcsIGJnQ3R4KTtcbmZpeFJlc29sdXRpb24oaHVkLCBodWRDdHgpO1xuXG4vL0NyZWF0aW5nIG5ldyBpbnN0YW5jZXMgZm9yIHRoZSBnYW1lXG5sZXQgcGxCQyA9IG5ldyBCdWxsZXRDb250cm9sbGVyKGZpZWxkKTsgLy8gZmllbGQgbGF5ZXIgaXMgd2hlcmUgdGhlIGdhbWUgdGFrZXMgcGxhY2VcbmxldCBlbmVteUNvbnRyb2xsZXIgPSBuZXcgRW5lbXlDb250cm9sbGVyKGZpZWxkKTtcbmxldCBwbGF5ZXIgPSBuZXcgUGxheWVyKHJlY3Qud2lkdGggLyAyLFxuICAgIHJlY3QuaGVpZ2h0IC8gMiwgcGxCQyxcbiAgICB7XG4gICAgICAgIHN0cm9rZUNvbG9yOiBcImdyZWVuXCIsXG4gICAgICAgIGNhbnZhczogZmllbGRcbiAgICB9KVxuXG5jb25zdCBodWRJbnRlcmZhY2UgPSBuZXcgSFVEKGh1ZCwgcGxheWVyKTtcblxuLy8gVmFyaWFibGVzIHRvIGtlZXAgdGhlIGdhbWUgZ29pbmdcbmxldCBnYW1lTG9vcDtcbmxldCBib3NzU3Bhd25lZDtcbmxldCB3YXZlID0gMDtcbmxldCBjb3VudERvd25Db3VudGVkRG93bjtcbmxldCBuZXdXYXZlSnVzdFN0YXJ0ZWQgPSB0cnVlO1xubGV0IHRpbWVyO1xubGV0IGd1bnMgPSBbXTtcbmxldCB0aW1lcklzU2V0ID0gdHJ1ZTtcbmxldCB0aW1lQmV0d2VlbldhdmVzID0gMjAwMDA7IC8vIG1pbGxpc2Vjb25kc1xubGV0IG11dGVkID0gZmFsc2U7XG5cbmVuZW15Q29udHJvbGxlci5jcmVhdGVFbmVtaWVzKHdhdmUpXG5cbi8vIFRoZSBnYW1lcGxheSBsb29wIHN0YXJ0cyBoZXJlXG5mdW5jdGlvbiBwbGF5KCkge1xuICAgIGRlZmF1bHRTdHlsZSgpO1xuICAgIGxldCBjdXJyZW50VG90YWxFbmVteUhlYWx0aCA9IDA7XG4gICAgbGV0IHRvdGFsRW5lbXlNYXhIZWFsdGggPSAwO1xuICAgIG11dGVkID0gcGxheWVyLm11dGVkXG4gICAgaWYgKG5ld1dhdmVKdXN0U3RhcnRlZCkge1xuICAgICAgICBpZiAod2F2ZSA9PT0gNSkgYm9zc1NwYXduZWQgPSB0cnVlO1xuICAgICAgICBuZXdXYXZlSnVzdFN0YXJ0ZWQgPSBmYWxzZTtcbiAgICAgICAgdGltZXIgPSBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICAgIGNvdW50RG93bkNvdW50ZWREb3duID0gdHJ1ZTtcbiAgICAgICAgfSwgdGltZUJldHdlZW5XYXZlcylcbiAgICB9XG5cbiAgICAvLyBDbGVhciB0aGUgZnJhbWVcbiAgICBmaWVsZEN0eC5jbGVhclJlY3QoMCwgMCwgZmllbGQud2lkdGgsIGZpZWxkLmhlaWdodClcbiAgICBodWRDdHguY2xlYXJSZWN0KDAsIDAsIGh1ZC53aWR0aCwgaHVkLmhlaWdodClcblxuICAgIC8vIFN0YXJ0IGRyYXdpbmcgdGhlIG5ldyBmcmFtZVxuICAgIHBsQkMuZHJhdyhmaWVsZEN0eCk7XG4gICAgZW5lbXlDb250cm9sbGVyLmVuZW1pZXMuZm9yRWFjaChlbmVteSA9PiB7XG4gICAgICAgIGlmIChlbmVteS5oZWFsdGggPiAwKSB7XG4gICAgICAgICAgICBwbEJDLmNvbGxpZGVzV2l0aChlbmVteSwge1xuICAgICAgICAgICAgICAgIG11dGVkOiBtdXRlZFxuICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIGVuZW15LmRyYXcoZmllbGRDdHgsIHtcbiAgICAgICAgICAgICAgICBtdXRlZDogbXV0ZWRcbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgICBjdXJyZW50VG90YWxFbmVteUhlYWx0aCArPSBlbmVteS5oZWFsdGhcbiAgICAgICAgICAgIHRvdGFsRW5lbXlNYXhIZWFsdGggKz0gZW5lbXkubWF4SHBcbiAgICAgICAgICAgIGlmICghZ3Vucy5pbmNsdWRlcyhlbmVteS5idWxsZXRDb250cm9sbGVyKSkge1xuICAgICAgICAgICAgICAgIGd1bnMucHVzaChlbmVteS5idWxsZXRDb250cm9sbGVyKVxuICAgICAgICAgICAgfVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgZW5lbXlDb250cm9sbGVyLmVuZW1pZXMuc3BsaWNlKGVuZW15Q29udHJvbGxlci5lbmVtaWVzLmluZGV4T2YoZW5lbXkpLCAxKVxuICAgICAgICB9XG4gICAgfSk7XG4gICAgZ3Vucy5mb3JFYWNoKGd1biA9PiB7XG4gICAgICAgIGd1bi5jb2xsaWRlc1dpdGgocGxheWVyLCB7XG4gICAgICAgICAgICBtdXRlZDogbXV0ZWRcbiAgICAgICAgfVxuICAgICAgICApO1xuICAgICAgICBndW4uZHJhdyhmaWVsZEN0eCk7XG4gICAgfSlcblxuICAgIGlmIChwbGF5ZXIuaGVhbHRoID4gMCkge1xuICAgICAgICBwbGF5ZXIuZHJhdyhmaWVsZEN0eCk7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgcGxheWVyID0gbnVsbDtcbiAgICAgICAgZ2FtZU92ZXIoKTtcbiAgICB9XG4gICAgaHVkSW50ZXJmYWNlLmRyYXcoKTtcbiAgICBpZiAoY3VycmVudFRvdGFsRW5lbXlIZWFsdGggPiAwICYmIGJvc3NTcGF3bmVkKSB7XG4gICAgICAgIGh1ZEludGVyZmFjZS5kcmF3Qm9zc0hwKGN1cnJlbnRUb3RhbEVuZW15SGVhbHRoLCB0b3RhbEVuZW15TWF4SGVhbHRoKVxuICAgIH1cbiAgICBpZiAoZW5lbXlDb250cm9sbGVyLmVuZW1pZXMubGVuZ3RoIDwgMSB8fCBjb3VudERvd25Db3VudGVkRG93bikge1xuICAgICAgICBjbGVhclRpbWVvdXQodGltZXIpXG4gICAgICAgIGNvdW50RG93bkNvdW50ZWREb3duID0gZmFsc2U7XG4gICAgICAgIGlmIChib3NzU3Bhd25lZCAmJiBlbmVteUNvbnRyb2xsZXIuZW5lbWllcy5sZW5ndGggPCAxKSB7XG4gICAgICAgICAgICBib3NzU3Bhd25lZCA9IGZhbHNlO1xuICAgICAgICAgICAgZ2FtZU92ZXIoKVxuICAgICAgICB9XG4gICAgICAgIGlmICh0aW1lcklzU2V0ICYmICFib3NzU3Bhd25lZCkge1xuICAgICAgICAgICAgdGltZXJJc1NldCA9IGZhbHNlO1xuICAgICAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgICAgICAgd2F2ZSArPSAxO1xuICAgICAgICAgICAgICAgIG5ld1dhdmVKdXN0U3RhcnRlZCA9IHRydWU7XG4gICAgICAgICAgICAgICAgdGltZXJJc1NldCA9IHRydWU7XG4gICAgICAgICAgICAgICAgZW5lbXlDb250cm9sbGVyLmNyZWF0ZUVuZW1pZXMod2F2ZSk7XG4gICAgICAgICAgICAgICAgaWYgKGVuZW15Q29udHJvbGxlci5lbmVtaWVzLmxlbmd0aCA8IDEpIGd1bnMuc3BsaWNlKDApO1xuICAgICAgICAgICAgfSwgMjAwMClcbiAgICAgICAgfVxuICAgIH1cbn1cblxuLy8gQ3VzdG9taXplIHN0eWxlcyBmb3IgZ2FtZXBsYXkgbGF5ZXJcbmZ1bmN0aW9uIGRlZmF1bHRTdHlsZSgpIHtcbiAgICBmaWVsZEN0eC5zaGFkb3dDb2xvciA9IFwiYmx1ZVwiO1xuICAgIGZpZWxkQ3R4LnNoYWRvd0JsdXIgPSAzMDtcbn1cblxuLy8gZ2FtZUxvb3AgPSBzZXRJbnRlcnZhbChwbGF5LCAxMDAwIC8gNjApO1xuXG5mdW5jdGlvbiBmaXhSZXNvbHV0aW9uKGNhbnZhcywgY3R4KSB7XG4gICAgY29uc3QgZHByID0gd2luZG93LmRldmljZVBpeGVsUmF0aW8gfHwgMTtcbiAgICBjb25zdCByZWN0ID0gY2FudmFzLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xuXG4gICAgY2FudmFzLndpZHRoID0gcmVjdC53aWR0aCAqIGRwcjtcbiAgICBjYW52YXMuaGVpZ2h0ID0gcmVjdC5oZWlnaHQgKiBkcHI7XG4gICAgY3R4LnNjYWxlKGRwciwgZHByKTtcblxuICAgIGNhbnZhcy5zdHlsZS53aWR0aCA9IGAke3JlY3Qud2lkdGh9cHhgO1xuICAgIGNhbnZhcy5zdHlsZS5oZWlnaHQgPSBgJHtyZWN0LmhlaWdodH1weGA7XG5cbiAgICBjdHguaW1hZ2VTbW9vdGhpbmdFbmFibGVkID0gdHJ1ZTtcbn1cblxuXG5mdW5jdGlvbiBnYW1lT3ZlcigpIHtcbiAgICBjbGVhckludGVydmFsKGdhbWVMb29wKTtcbiAgICBwbGF5ZXIgPSBudWxsXG4gICAgaHVkSW50ZXJmYWNlLnJlbmRlckdhbWVvdmVyKCk7XG59XG5cbmxldCB0aXRsZUxvb3A7XG5cbmZ1bmN0aW9uIHRpdGxlU2NyZWVuKCkge1xuICAgIGh1ZEN0eC5jbGVhclJlY3QoMCwgMCwgaHVkLndpZHRoLCBodWQuaGVpZ2h0KVxuICAgIGNvbnN0IGdyYWRpZW50QmcgPSBodWRDdHguY3JlYXRlTGluZWFyR3JhZGllbnQoMCwgMCwgMCwgaHVkLmhlaWdodCk7XG4gICAgZ3JhZGllbnRCZy5hZGRDb2xvclN0b3AoMCwgXCIjMjMzNTNEXCIpO1xuICAgIGdyYWRpZW50QmcuYWRkQ29sb3JTdG9wKDEsIFwiIzBDMzM3QVwiKTtcbiAgICBodWRDdHguZmlsbFN0eWxlID0gZ3JhZGllbnRCZztcbiAgICBodWRDdHguZmlsbFJlY3QoMCwgMCwgaHVkLndpZHRoLCBodWQuaGVpZ2h0KVxuICAgIGh1ZEludGVyZmFjZS5kcmF3VGl0bGVTY3JlZW4oKVxuICAgIGlmIChodWRJbnRlcmZhY2UucGxheWVyUHJlc3NlZFBsYXkpIHtcbiAgICAgICAgaHVkSW50ZXJmYWNlLnBsYXllclByZXNzZWRQbGF5ID0gZmFsc2U7XG4gICAgICAgIGNsZWFySW50ZXJ2YWwodGl0bGVMb29wKVxuICAgICAgICAvLyBJZiBwbGF5ZXIgaXMgZGVhZCwgc3RhcnQgYSBuZXcgZ2FtZVxuICAgICAgICBpZiAocGxheWVyID09PSBudWxsKSB7XG4gICAgICAgICAgICBwbEJDID0gbnVsbDtcbiAgICAgICAgICAgIHBsQkMgPSBuZXcgQnVsbGV0Q29udHJvbGxlcihmaWVsZClcbiAgICAgICAgICAgIHBsYXllciA9IG5ldyBQbGF5ZXIocmVjdC53aWR0aCAvIDIsXG4gICAgICAgICAgICAgICAgcmVjdC5oZWlnaHQgLyAyLCBwbEJDLFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgc3Ryb2tlQ29sb3I6IFwiZ3JlZW5cIixcbiAgICAgICAgICAgICAgICAgICAgY2FudmFzOiBmaWVsZCxcbiAgICAgICAgICAgICAgICAgICAgbXV0ZWQ6IG11dGVkXG4gICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIGh1ZEludGVyZmFjZS5wbGF5ZXIgPSBwbGF5ZXI7XG4gICAgICAgICAgICB3YXZlID0gMDtcbiAgICAgICAgICAgIGJvc3NTcGF3bmVkID0gbnVsbDtcbiAgICAgICAgICAgIGNvdW50RG93bkNvdW50ZWREb3duID0gbnVsbDtcbiAgICAgICAgICAgIGd1bnMgPSBbXTtcbiAgICAgICAgICAgIHRpbWVyID0gbnVsbDtcbiAgICAgICAgICAgIG5ld1dhdmVKdXN0U3RhcnRlZCA9IHRydWU7XG4gICAgICAgICAgICB0aW1lcklzU2V0ID0gdHJ1ZTtcbiAgICAgICAgICAgIGVuZW15Q29udHJvbGxlciA9IG51bGw7XG4gICAgICAgICAgICBlbmVteUNvbnRyb2xsZXIgPSBuZXcgRW5lbXlDb250cm9sbGVyKGZpZWxkKTtcbiAgICAgICAgICAgIGVuZW15Q29udHJvbGxlci5jcmVhdGVFbmVtaWVzKHdhdmUpXG5cbiAgICAgICAgfVxuICAgICAgICBjb25zdCBlc2NhcGVGdW5jID0gKGUpID0+IHtcbiAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKVxuICAgICAgICAgICAgaWYgKGUuY29kZSA9PT0gXCJFc2NhcGVcIikge1xuICAgICAgICAgICAgICAgIGNsZWFySW50ZXJ2YWwoZ2FtZUxvb3ApXG4gICAgICAgICAgICAgICAgdGl0bGVMb29wID0gc2V0SW50ZXJ2YWwodGl0bGVTY3JlZW4sIDEwMDAgLyA2MClcbiAgICAgICAgICAgICAgICByZW1vdmVFdmVudExpc3RlbmVyKFwia2V5ZG93blwiLCBlc2NhcGVGdW5jKVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGFkZEV2ZW50TGlzdGVuZXIoXCJrZXlkb3duXCIsIGVzY2FwZUZ1bmMpXG4gICAgICAgIGdhbWVMb29wID0gc2V0SW50ZXJ2YWwocGxheSwgMTAwMCAvIDYwKVxuICAgIH07XG5cbn1cblxudGl0bGVMb29wID0gc2V0SW50ZXJ2YWwodGl0bGVTY3JlZW4sIDEwMDAgLyA2MClcblxuXG4vLyBCYWNrZ3JvdW5kIGltYWdlXG5cbmNvbnN0IGltZyA9IG5ldyBJbWFnZSgpO1xuXG4vLyBVc2VyIFZhcmlhYmxlcyAtIGN1c3RvbWl6ZSB0aGVzZSB0byBjaGFuZ2UgdGhlIGltYWdlIGJlaW5nIHNjcm9sbGVkLCBpdHNcbi8vIGRpcmVjdGlvbiwgYW5kIHRoZSBzcGVlZC5cbmltZy5zcmMgPSBcIi4vaW1hZ2VzL0Nsb3Vkcy9DbG91ZHMzLzMucG5nXCI7XG5jb25zdCBjYW52YXNYU2l6ZSA9IHJlY3Qud2lkdGg7XG5jb25zdCBjYW52YXNZU2l6ZSA9IHJlY3QuaGVpZ2h0O1xuY29uc3Qgc3BlZWQgPSAxMDsgLy8gbG93ZXIgaXMgZmFzdGVyXG5jb25zdCBzY2FsZSA9IDIuNTtcbmNvbnN0IHkgPSAtNC41OyAvLyB2ZXJ0aWNhbCBvZmZzZXRcblxuLy8gTWFpbiBwcm9ncmFtXG5jb25zdCBkeCA9IDAuNzU7XG5sZXQgaW1nVztcbmxldCBpbWdIO1xubGV0IHggPSAwO1xubGV0IGNsZWFyWDtcbmxldCBjbGVhclk7XG5cbmltZy5vbmxvYWQgPSAoKSA9PiB7XG4gICAgaW1nVyA9IGltZy53aWR0aCAqIHNjYWxlO1xuICAgIGltZ0ggPSBpbWcuaGVpZ2h0ICogc2NhbGU7XG5cbiAgICBpZiAoaW1nVyA+IGNhbnZhc1hTaXplKSB7XG4gICAgICAgIC8vIEltYWdlIGxhcmdlciB0aGFuIGNhbnZhc1xuICAgICAgICB4ID0gY2FudmFzWFNpemUgLSBpbWdXO1xuICAgIH1cblxuICAgIC8vIENoZWNrIGlmIGltYWdlIGRpbWVuc2lvbiBpcyBsYXJnZXIgdGhhbiBjYW52YXNcbiAgICBjbGVhclggPSBNYXRoLm1heChpbWdXLCBjYW52YXNYU2l6ZSk7XG4gICAgY2xlYXJZID0gTWF0aC5tYXgoaW1nSCwgY2FudmFzWVNpemUpO1xuXG4gICAgLy8gR2V0IGNhbnZhcyBjb250ZXh0XG5cbiAgICAvLyBTZXQgcmVmcmVzaCByYXRlXG4gICAgcmV0dXJuIHNldEludGVydmFsKGRyYXdCYWNrZ3JvdW5kLCBzcGVlZCk7XG59O1xuXG5mdW5jdGlvbiBkcmF3QmFja2dyb3VuZCgpIHtcbiAgICBiZ0N0eC5jbGVhclJlY3QoMCwgMCwgY2xlYXJYLCBjbGVhclkpOyAvLyBjbGVhciB0aGUgY2FudmFzXG5cbiAgICAvLyBJZiBpbWFnZSBpcyA8PSBjYW52YXMgc2l6ZVxuICAgIGlmIChpbWdXIDw9IGNhbnZhc1hTaXplKSB7XG4gICAgICAgIC8vIFJlc2V0LCBzdGFydCBmcm9tIGJlZ2lubmluZ1xuICAgICAgICBpZiAoeCA+IGNhbnZhc1hTaXplKSB7XG4gICAgICAgICAgICB4ID0gLWltZ1cgKyB4O1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gRHJhdyBhZGRpdGlvbmFsIGltYWdlMVxuICAgICAgICBpZiAoeCA+IDApIHtcbiAgICAgICAgICAgIGJnQ3R4LmRyYXdJbWFnZShpbWcsIC1pbWdXICsgeCwgeSwgaW1nVywgaW1nSCk7XG4gICAgICAgIH1cblxuICAgICAgICAvLyBEcmF3IGFkZGl0aW9uYWwgaW1hZ2UyXG4gICAgICAgIGlmICh4IC0gaW1nVyA+IDApIHtcbiAgICAgICAgICAgIGJnQ3R4LmRyYXdJbWFnZShpbWcsIC1pbWdXICogMiArIHgsIHksIGltZ1csIGltZ0gpO1xuICAgICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgICAgLy8gSW1hZ2UgaXMgPiBjYW52YXMgc2l6ZVxuICAgICAgICAvLyBSZXNldCwgc3RhcnQgZnJvbSBiZWdpbm5pbmdcbiAgICAgICAgaWYgKHggPiBjYW52YXNYU2l6ZSkge1xuICAgICAgICAgICAgeCA9IGNhbnZhc1hTaXplIC0gaW1nVztcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIERyYXcgYWRkaXRpb25hbCBpbWFnZVxuICAgICAgICBpZiAoeCA+IGNhbnZhc1hTaXplIC0gaW1nVykge1xuICAgICAgICAgICAgYmdDdHguZHJhd0ltYWdlKGltZywgeCAtIGltZ1cgKyAxLCB5LCBpbWdXLCBpbWdIKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8vIERyYXcgaW1hZ2VcbiAgICBiZ0N0eC5kcmF3SW1hZ2UoaW1nLCB4LCB5LCBpbWdXLCBpbWdIKTtcblxuICAgIC8vIEFtb3VudCB0byBtb3ZlXG4gICAgeCArPSBkeDtcbn0iXSwibmFtZXMiOlsiUGxheWVyIiwicmVxdWlyZSIsIkVuZW15IiwiQnVsbGV0Q29udHJvbGxlciIsIkVuZW15Q29udHJvbGxlciIsIkhVRCIsIlNxdWlzaHkiLCJmaWVsZCIsImRvY3VtZW50IiwiZ2V0RWxlbWVudEJ5SWQiLCJiZyIsImh1ZCIsImZpZWxkQ3R4IiwiZ2V0Q29udGV4dCIsImJnQ3R4IiwiaHVkQ3R4IiwicmVjdCIsImdldEJvdW5kaW5nQ2xpZW50UmVjdCIsImZpeFJlc29sdXRpb24iLCJwbEJDIiwiZW5lbXlDb250cm9sbGVyIiwicGxheWVyIiwid2lkdGgiLCJoZWlnaHQiLCJzdHJva2VDb2xvciIsImNhbnZhcyIsImh1ZEludGVyZmFjZSIsImdhbWVMb29wIiwiYm9zc1NwYXduZWQiLCJ3YXZlIiwiY291bnREb3duQ291bnRlZERvd24iLCJuZXdXYXZlSnVzdFN0YXJ0ZWQiLCJ0aW1lciIsImd1bnMiLCJ0aW1lcklzU2V0IiwidGltZUJldHdlZW5XYXZlcyIsIm11dGVkIiwiY3JlYXRlRW5lbWllcyIsInBsYXkiLCJkZWZhdWx0U3R5bGUiLCJjdXJyZW50VG90YWxFbmVteUhlYWx0aCIsInRvdGFsRW5lbXlNYXhIZWFsdGgiLCJzZXRUaW1lb3V0IiwiY2xlYXJSZWN0IiwiZHJhdyIsImVuZW1pZXMiLCJmb3JFYWNoIiwiZW5lbXkiLCJoZWFsdGgiLCJjb2xsaWRlc1dpdGgiLCJtYXhIcCIsImluY2x1ZGVzIiwiYnVsbGV0Q29udHJvbGxlciIsInB1c2giLCJzcGxpY2UiLCJpbmRleE9mIiwiZ3VuIiwiZ2FtZU92ZXIiLCJkcmF3Qm9zc0hwIiwibGVuZ3RoIiwiY2xlYXJUaW1lb3V0Iiwic2hhZG93Q29sb3IiLCJzaGFkb3dCbHVyIiwiY3R4IiwiZHByIiwid2luZG93IiwiZGV2aWNlUGl4ZWxSYXRpbyIsInNjYWxlIiwic3R5bGUiLCJpbWFnZVNtb290aGluZ0VuYWJsZWQiLCJjbGVhckludGVydmFsIiwicmVuZGVyR2FtZW92ZXIiLCJ0aXRsZUxvb3AiLCJ0aXRsZVNjcmVlbiIsImdyYWRpZW50QmciLCJjcmVhdGVMaW5lYXJHcmFkaWVudCIsImFkZENvbG9yU3RvcCIsImZpbGxTdHlsZSIsImZpbGxSZWN0IiwiZHJhd1RpdGxlU2NyZWVuIiwicGxheWVyUHJlc3NlZFBsYXkiLCJlc2NhcGVGdW5jIiwiZSIsInByZXZlbnREZWZhdWx0IiwiY29kZSIsInNldEludGVydmFsIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsImFkZEV2ZW50TGlzdGVuZXIiLCJpbWciLCJJbWFnZSIsInNyYyIsImNhbnZhc1hTaXplIiwiY2FudmFzWVNpemUiLCJzcGVlZCIsInkiLCJkeCIsImltZ1ciLCJpbWdIIiwieCIsImNsZWFyWCIsImNsZWFyWSIsIm9ubG9hZCIsIk1hdGgiLCJtYXgiLCJkcmF3QmFja2dyb3VuZCIsImRyYXdJbWFnZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/scripts/bPatterns/bulletsPattern1.js":
/*!**************************************************!*\
  !*** ./src/scripts/bPatterns/bulletsPattern1.js ***!
  \**************************************************/
/***/ (function(module) {

eval("let bulletsPattern = {\n  // Left\n  0: {\n    x: 0,\n    y: 0,\n    damage: 1,\n    speed: 28,\n    velocity: -1,\n    vector: [-1, 0],\n    theta: 0,\n    radius: 9,\n    color: \"red\"\n  },\n  // Right\n  1: {\n    x: 0,\n    y: 0,\n    speed: 28,\n    damage: 1,\n    velocity: -1,\n    vector: [1, 0],\n    theta: 0,\n    radius: 9,\n    color: \"red\"\n  },\n  // Down\n  2: {\n    x: 0,\n    y: 0,\n    speed: 20,\n    damage: 1,\n    velocity: -1,\n    vector: [0, 1],\n    theta: 0,\n    radius: 9,\n    color: \"red\"\n  },\n  // Up\n  3: {\n    x: 0,\n    y: 0,\n    speed: 20,\n    damage: 1,\n    velocity: -1,\n    vector: [0, -1],\n    theta: 0,\n    radius: 9,\n    color: \"red\"\n  },\n  // Up Left\n  4: {\n    x: 0,\n    y: 0,\n    speed: 28,\n    damage: 1,\n    velocity: -1,\n    vector: [Math.sqrt(1) * -1, Math.sqrt(1) * -1],\n    theta: 0,\n    radius: 9,\n    color: \"red\"\n  },\n  // Down Right\n  5: {\n    x: 0,\n    y: 0,\n    speed: 28,\n    damage: 1,\n    velocity: -1,\n    vector: [Math.sqrt(1), Math.sqrt(1)],\n    theta: 0,\n    radius: 9,\n    color: \"red\"\n  },\n  // Up Right\n  6: {\n    x: 0,\n    y: 0,\n    speed: 28,\n    damage: 1,\n    velocity: -1,\n    vector: [Math.sqrt(1), Math.sqrt(1) * -1],\n    theta: 0,\n    radius: 9,\n    color: \"red\"\n  },\n  // Down Left\n  7: {\n    x: 0,\n    y: 0,\n    speed: 28,\n    damage: 1,\n    velocity: -1,\n    vector: [Math.sqrt(1) * -1, Math.sqrt(1)],\n    theta: 0,\n    radius: 9,\n    color: \"red\"\n  }\n};\nmodule.exports = bulletsPattern;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9iUGF0dGVybnMvYnVsbGV0c1BhdHRlcm4xLmpzLmpzIiwibmFtZXMiOlsiYnVsbGV0c1BhdHRlcm4iLCJ4IiwieSIsImRhbWFnZSIsInNwZWVkIiwidmVsb2NpdHkiLCJ2ZWN0b3IiLCJ0aGV0YSIsInJhZGl1cyIsImNvbG9yIiwiTWF0aCIsInNxcnQiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9qcy8uL3NyYy9zY3JpcHRzL2JQYXR0ZXJucy9idWxsZXRzUGF0dGVybjEuanM/ZDUwMSJdLCJzb3VyY2VzQ29udGVudCI6WyJsZXQgYnVsbGV0c1BhdHRlcm4gPSB7XHJcbiAgICAvLyBMZWZ0XHJcbiAgICAwOiB7XHJcbiAgICAgICAgeDogMCxcclxuICAgICAgICB5OiAwLFxyXG4gICAgICAgIGRhbWFnZTogMSxcclxuICAgICAgICBzcGVlZDogMjgsXHJcbiAgICAgICAgdmVsb2NpdHk6IC0xLFxyXG4gICAgICAgIHZlY3RvcjogWy0xLCAwXSxcclxuICAgICAgICB0aGV0YTogMCxcclxuICAgICAgICByYWRpdXM6IDksXHJcbiAgICAgICAgY29sb3I6IFwicmVkXCJcclxuICAgIH0sXHJcbiAgICAvLyBSaWdodFxyXG4gICAgMToge1xyXG4gICAgICAgIHg6IDAsXHJcbiAgICAgICAgeTogMCxcclxuICAgICAgICBzcGVlZDogMjgsXHJcbiAgICAgICAgZGFtYWdlOiAxLFxyXG4gICAgICAgIHZlbG9jaXR5OiAtMSxcclxuICAgICAgICB2ZWN0b3I6IFsxLCAwXSxcclxuICAgICAgICB0aGV0YTogMCxcclxuICAgICAgICByYWRpdXM6IDksXHJcbiAgICAgICAgY29sb3I6IFwicmVkXCJcclxuICAgIH0sXHJcbiAgICAvLyBEb3duXHJcbiAgICAyOiB7XHJcbiAgICAgICAgeDogMCxcclxuICAgICAgICB5OiAwLFxyXG4gICAgICAgIHNwZWVkOiAyMCxcclxuICAgICAgICBkYW1hZ2U6IDEsXHJcbiAgICAgICAgdmVsb2NpdHk6IC0xLFxyXG4gICAgICAgIHZlY3RvcjogWzAsIDFdLFxyXG4gICAgICAgIHRoZXRhOiAwLFxyXG4gICAgICAgIHJhZGl1czogOSxcclxuICAgICAgICBjb2xvcjogXCJyZWRcIlxyXG4gICAgfSxcclxuICAgIC8vIFVwXHJcbiAgICAzOiB7XHJcbiAgICAgICAgeDogMCxcclxuICAgICAgICB5OiAwLFxyXG4gICAgICAgIHNwZWVkOiAyMCxcclxuICAgICAgICBkYW1hZ2U6IDEsXHJcbiAgICAgICAgdmVsb2NpdHk6IC0xLFxyXG4gICAgICAgIHZlY3RvcjogWzAsIC0xXSxcclxuICAgICAgICB0aGV0YTogMCxcclxuICAgICAgICByYWRpdXM6IDksXHJcbiAgICAgICAgY29sb3I6IFwicmVkXCJcclxuICAgIH0sXHJcbiAgICAvLyBVcCBMZWZ0XHJcbiAgICA0OiB7XHJcbiAgICAgICAgeDogMCxcclxuICAgICAgICB5OiAwLFxyXG4gICAgICAgIHNwZWVkOiAyOCxcclxuICAgICAgICBkYW1hZ2U6IDEsXHJcbiAgICAgICAgdmVsb2NpdHk6IC0xLFxyXG4gICAgICAgIHZlY3RvcjogW01hdGguc3FydCgxKSAqIC0xLCBNYXRoLnNxcnQoMSkgKi0xXSxcclxuICAgICAgICB0aGV0YTogMCxcclxuICAgICAgICByYWRpdXM6IDksXHJcbiAgICAgICAgY29sb3I6IFwicmVkXCIsXHJcbiAgICB9LFxyXG4gICAgLy8gRG93biBSaWdodFxyXG4gICAgNToge1xyXG4gICAgICAgIHg6IDAsXHJcbiAgICAgICAgeTogMCxcclxuICAgICAgICBzcGVlZDogMjgsXHJcbiAgICAgICAgZGFtYWdlOiAxLFxyXG4gICAgICAgIHZlbG9jaXR5OiAtMSxcclxuICAgICAgICB2ZWN0b3I6IFtNYXRoLnNxcnQoMSksIE1hdGguc3FydCgxKV0sXHJcbiAgICAgICAgdGhldGE6IDAsXHJcbiAgICAgICAgcmFkaXVzOiA5LFxyXG4gICAgICAgIGNvbG9yOiBcInJlZFwiLFxyXG4gICAgfSxcclxuICAgIC8vIFVwIFJpZ2h0XHJcbiAgICA2OiB7XHJcbiAgICAgICAgeDogMCxcclxuICAgICAgICB5OiAwLFxyXG4gICAgICAgIHNwZWVkOiAyOCxcclxuICAgICAgICBkYW1hZ2U6IDEsXHJcbiAgICAgICAgdmVsb2NpdHk6IC0xLFxyXG4gICAgICAgIHZlY3RvcjogW01hdGguc3FydCgxKSxNYXRoLnNxcnQoMSkgKiAtMV0sXHJcbiAgICAgICAgdGhldGE6IDAsXHJcbiAgICAgICAgcmFkaXVzOiA5LFxyXG4gICAgICAgIGNvbG9yOiBcInJlZFwiLFxyXG4gICAgfSxcclxuICAgIC8vIERvd24gTGVmdFxyXG4gICAgNzoge1xyXG4gICAgICAgIHg6IDAsXHJcbiAgICAgICAgeTogMCxcclxuICAgICAgICBzcGVlZDogMjgsXHJcbiAgICAgICAgZGFtYWdlOiAxLFxyXG4gICAgICAgIHZlbG9jaXR5OiAtMSxcclxuICAgICAgICB2ZWN0b3I6IFtNYXRoLnNxcnQoMSkgKiAtMSwgTWF0aC5zcXJ0KDEpXSxcclxuICAgICAgICB0aGV0YTogMCxcclxuICAgICAgICByYWRpdXM6IDksXHJcbiAgICAgICAgY29sb3I6IFwicmVkXCIsXHJcbiAgICB9LFxyXG5cclxufVxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBidWxsZXRzUGF0dGVybjsiXSwibWFwcGluZ3MiOiJBQUFBLElBQUlBLGNBQWMsR0FBRztFQUNqQjtFQUNBLENBQUMsRUFBRTtJQUNDQyxDQUFDLEVBQUUsQ0FBQztJQUNKQyxDQUFDLEVBQUUsQ0FBQztJQUNKQyxNQUFNLEVBQUUsQ0FBQztJQUNUQyxLQUFLLEVBQUUsRUFBRTtJQUNUQyxRQUFRLEVBQUUsQ0FBQyxDQUFDO0lBQ1pDLE1BQU0sRUFBRSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQztJQUNmQyxLQUFLLEVBQUUsQ0FBQztJQUNSQyxNQUFNLEVBQUUsQ0FBQztJQUNUQyxLQUFLLEVBQUU7RUFDWCxDQUFDO0VBQ0Q7RUFDQSxDQUFDLEVBQUU7SUFDQ1IsQ0FBQyxFQUFFLENBQUM7SUFDSkMsQ0FBQyxFQUFFLENBQUM7SUFDSkUsS0FBSyxFQUFFLEVBQUU7SUFDVEQsTUFBTSxFQUFFLENBQUM7SUFDVEUsUUFBUSxFQUFFLENBQUMsQ0FBQztJQUNaQyxNQUFNLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDO0lBQ2RDLEtBQUssRUFBRSxDQUFDO0lBQ1JDLE1BQU0sRUFBRSxDQUFDO0lBQ1RDLEtBQUssRUFBRTtFQUNYLENBQUM7RUFDRDtFQUNBLENBQUMsRUFBRTtJQUNDUixDQUFDLEVBQUUsQ0FBQztJQUNKQyxDQUFDLEVBQUUsQ0FBQztJQUNKRSxLQUFLLEVBQUUsRUFBRTtJQUNURCxNQUFNLEVBQUUsQ0FBQztJQUNURSxRQUFRLEVBQUUsQ0FBQyxDQUFDO0lBQ1pDLE1BQU0sRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUM7SUFDZEMsS0FBSyxFQUFFLENBQUM7SUFDUkMsTUFBTSxFQUFFLENBQUM7SUFDVEMsS0FBSyxFQUFFO0VBQ1gsQ0FBQztFQUNEO0VBQ0EsQ0FBQyxFQUFFO0lBQ0NSLENBQUMsRUFBRSxDQUFDO0lBQ0pDLENBQUMsRUFBRSxDQUFDO0lBQ0pFLEtBQUssRUFBRSxFQUFFO0lBQ1RELE1BQU0sRUFBRSxDQUFDO0lBQ1RFLFFBQVEsRUFBRSxDQUFDLENBQUM7SUFDWkMsTUFBTSxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO0lBQ2ZDLEtBQUssRUFBRSxDQUFDO0lBQ1JDLE1BQU0sRUFBRSxDQUFDO0lBQ1RDLEtBQUssRUFBRTtFQUNYLENBQUM7RUFDRDtFQUNBLENBQUMsRUFBRTtJQUNDUixDQUFDLEVBQUUsQ0FBQztJQUNKQyxDQUFDLEVBQUUsQ0FBQztJQUNKRSxLQUFLLEVBQUUsRUFBRTtJQUNURCxNQUFNLEVBQUUsQ0FBQztJQUNURSxRQUFRLEVBQUUsQ0FBQyxDQUFDO0lBQ1pDLE1BQU0sRUFBRSxDQUFDSSxJQUFJLENBQUNDLElBQUksQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsRUFBRUQsSUFBSSxDQUFDQyxJQUFJLENBQUMsQ0FBQyxDQUFDLEdBQUUsQ0FBQyxDQUFDLENBQUM7SUFDN0NKLEtBQUssRUFBRSxDQUFDO0lBQ1JDLE1BQU0sRUFBRSxDQUFDO0lBQ1RDLEtBQUssRUFBRTtFQUNYLENBQUM7RUFDRDtFQUNBLENBQUMsRUFBRTtJQUNDUixDQUFDLEVBQUUsQ0FBQztJQUNKQyxDQUFDLEVBQUUsQ0FBQztJQUNKRSxLQUFLLEVBQUUsRUFBRTtJQUNURCxNQUFNLEVBQUUsQ0FBQztJQUNURSxRQUFRLEVBQUUsQ0FBQyxDQUFDO0lBQ1pDLE1BQU0sRUFBRSxDQUFDSSxJQUFJLENBQUNDLElBQUksQ0FBQyxDQUFDLENBQUMsRUFBRUQsSUFBSSxDQUFDQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDcENKLEtBQUssRUFBRSxDQUFDO0lBQ1JDLE1BQU0sRUFBRSxDQUFDO0lBQ1RDLEtBQUssRUFBRTtFQUNYLENBQUM7RUFDRDtFQUNBLENBQUMsRUFBRTtJQUNDUixDQUFDLEVBQUUsQ0FBQztJQUNKQyxDQUFDLEVBQUUsQ0FBQztJQUNKRSxLQUFLLEVBQUUsRUFBRTtJQUNURCxNQUFNLEVBQUUsQ0FBQztJQUNURSxRQUFRLEVBQUUsQ0FBQyxDQUFDO0lBQ1pDLE1BQU0sRUFBRSxDQUFDSSxJQUFJLENBQUNDLElBQUksQ0FBQyxDQUFDLENBQUMsRUFBQ0QsSUFBSSxDQUFDQyxJQUFJLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7SUFDeENKLEtBQUssRUFBRSxDQUFDO0lBQ1JDLE1BQU0sRUFBRSxDQUFDO0lBQ1RDLEtBQUssRUFBRTtFQUNYLENBQUM7RUFDRDtFQUNBLENBQUMsRUFBRTtJQUNDUixDQUFDLEVBQUUsQ0FBQztJQUNKQyxDQUFDLEVBQUUsQ0FBQztJQUNKRSxLQUFLLEVBQUUsRUFBRTtJQUNURCxNQUFNLEVBQUUsQ0FBQztJQUNURSxRQUFRLEVBQUUsQ0FBQyxDQUFDO0lBQ1pDLE1BQU0sRUFBRSxDQUFDSSxJQUFJLENBQUNDLElBQUksQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsRUFBRUQsSUFBSSxDQUFDQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDekNKLEtBQUssRUFBRSxDQUFDO0lBQ1JDLE1BQU0sRUFBRSxDQUFDO0lBQ1RDLEtBQUssRUFBRTtFQUNYO0FBRUosQ0FBQztBQUVERyxNQUFNLENBQUNDLE9BQU8sR0FBR2IsY0FBYyJ9\n//# sourceURL=webpack-internal:///./src/scripts/bPatterns/bulletsPattern1.js\n");

/***/ }),

/***/ "./src/scripts/bPatterns/bulletsPattern2.js":
/*!**************************************************!*\
  !*** ./src/scripts/bPatterns/bulletsPattern2.js ***!
  \**************************************************/
/***/ (function(module) {

eval("let bulletsPattern = {\n  // Left\n  0: {\n    x: 0,\n    y: 0,\n    damage: 1,\n    speed: 3,\n    velocity: 0.02,\n    acceleration: 0.02,\n    vector: [-1, 0],\n    theta: 0,\n    radius: 8,\n    color: \"orange\"\n  },\n  // Right\n  1: {\n    x: this.width,\n    y: this.height,\n    speed: 3,\n    damage: 1,\n    velocity: 0.02,\n    acceleration: 0.02,\n    vector: [1, 0],\n    theta: 0,\n    radius: 8,\n    color: \"orange\"\n  }\n};\nmodule.exports = bulletsPattern;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9iUGF0dGVybnMvYnVsbGV0c1BhdHRlcm4yLmpzLmpzIiwibmFtZXMiOlsiYnVsbGV0c1BhdHRlcm4iLCJ4IiwieSIsImRhbWFnZSIsInNwZWVkIiwidmVsb2NpdHkiLCJhY2NlbGVyYXRpb24iLCJ2ZWN0b3IiLCJ0aGV0YSIsInJhZGl1cyIsImNvbG9yIiwid2lkdGgiLCJoZWlnaHQiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9qcy8uL3NyYy9zY3JpcHRzL2JQYXR0ZXJucy9idWxsZXRzUGF0dGVybjIuanM/NDFmYSJdLCJzb3VyY2VzQ29udGVudCI6WyJsZXQgYnVsbGV0c1BhdHRlcm4gPSB7XHJcbiAgICAvLyBMZWZ0XHJcbiAgICAwOiB7XHJcbiAgICAgICAgeDogMCxcclxuICAgICAgICB5OiAwLFxyXG4gICAgICAgIGRhbWFnZTogMSxcclxuICAgICAgICBzcGVlZDogMyxcclxuICAgICAgICB2ZWxvY2l0eTogMC4wMixcclxuICAgICAgICBhY2NlbGVyYXRpb246IDAuMDIsXHJcbiAgICAgICAgdmVjdG9yOiBbLTEsIDBdLFxyXG4gICAgICAgIHRoZXRhOiAwLFxyXG4gICAgICAgIHJhZGl1czogOCxcclxuICAgICAgICBjb2xvcjogXCJvcmFuZ2VcIlxyXG4gICAgfSxcclxuICAgIC8vIFJpZ2h0XHJcbiAgICAxOiB7XHJcbiAgICAgICAgeDogdGhpcy53aWR0aCxcclxuICAgICAgICB5OiB0aGlzLmhlaWdodCxcclxuICAgICAgICBzcGVlZDogMyxcclxuICAgICAgICBkYW1hZ2U6IDEsXHJcbiAgICAgICAgdmVsb2NpdHk6IDAuMDIsXHJcbiAgICAgICAgYWNjZWxlcmF0aW9uOiAwLjAyLFxyXG4gICAgICAgIHZlY3RvcjogWzEsIDBdLFxyXG4gICAgICAgIHRoZXRhOiAwLFxyXG4gICAgICAgIHJhZGl1czogOCxcclxuICAgICAgICBjb2xvcjogXCJvcmFuZ2VcIlxyXG4gICAgfSxcclxuXHJcbn1cclxuXHJcbm1vZHVsZS5leHBvcnRzID0gYnVsbGV0c1BhdHRlcm47Il0sIm1hcHBpbmdzIjoiQUFBQSxJQUFJQSxjQUFjLEdBQUc7RUFDakI7RUFDQSxDQUFDLEVBQUU7SUFDQ0MsQ0FBQyxFQUFFLENBQUM7SUFDSkMsQ0FBQyxFQUFFLENBQUM7SUFDSkMsTUFBTSxFQUFFLENBQUM7SUFDVEMsS0FBSyxFQUFFLENBQUM7SUFDUkMsUUFBUSxFQUFFLElBQUk7SUFDZEMsWUFBWSxFQUFFLElBQUk7SUFDbEJDLE1BQU0sRUFBRSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQztJQUNmQyxLQUFLLEVBQUUsQ0FBQztJQUNSQyxNQUFNLEVBQUUsQ0FBQztJQUNUQyxLQUFLLEVBQUU7RUFDWCxDQUFDO0VBQ0Q7RUFDQSxDQUFDLEVBQUU7SUFDQ1QsQ0FBQyxFQUFFLElBQUksQ0FBQ1UsS0FBSztJQUNiVCxDQUFDLEVBQUUsSUFBSSxDQUFDVSxNQUFNO0lBQ2RSLEtBQUssRUFBRSxDQUFDO0lBQ1JELE1BQU0sRUFBRSxDQUFDO0lBQ1RFLFFBQVEsRUFBRSxJQUFJO0lBQ2RDLFlBQVksRUFBRSxJQUFJO0lBQ2xCQyxNQUFNLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDO0lBQ2RDLEtBQUssRUFBRSxDQUFDO0lBQ1JDLE1BQU0sRUFBRSxDQUFDO0lBQ1RDLEtBQUssRUFBRTtFQUNYO0FBRUosQ0FBQztBQUVERyxNQUFNLENBQUNDLE9BQU8sR0FBR2QsY0FBYyJ9\n//# sourceURL=webpack-internal:///./src/scripts/bPatterns/bulletsPattern2.js\n");

/***/ }),

/***/ "./src/scripts/bPatterns/bulletsPattern3.js":
/*!**************************************************!*\
  !*** ./src/scripts/bPatterns/bulletsPattern3.js ***!
  \**************************************************/
/***/ (function(module) {

eval("let bulletsPattern = {\n  // Left\n  0: {\n    x: 0,\n    y: 0,\n    damage: 1,\n    speed: 3,\n    velocity: 0.02,\n    acceleration: 0.02,\n    vector: [0, 1],\n    theta: 0,\n    radius: 6,\n    color: \"yellow\"\n  },\n  // Right\n  1: {\n    x: this.width,\n    y: this.height,\n    speed: 3,\n    damage: 1,\n    velocity: 0.02,\n    acceleration: 0.02,\n    vector: [0, -1],\n    theta: 0,\n    radius: 6,\n    color: \"yellow\"\n  },\n  2: {\n    x: 0,\n    y: 0,\n    damage: 1,\n    speed: 3,\n    velocity: 0.02,\n    acceleration: 0.02,\n    vector: [-1, 0],\n    theta: 0,\n    radius: 6,\n    color: \"yellow\"\n  },\n  // Right\n  3: {\n    x: this.width,\n    y: this.height,\n    speed: 3,\n    damage: 1,\n    velocity: 0.02,\n    acceleration: 0.02,\n    vector: [1, 0],\n    theta: 0,\n    radius: 6,\n    color: \"yellow\"\n  }\n};\nmodule.exports = bulletsPattern;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9iUGF0dGVybnMvYnVsbGV0c1BhdHRlcm4zLmpzLmpzIiwibmFtZXMiOlsiYnVsbGV0c1BhdHRlcm4iLCJ4IiwieSIsImRhbWFnZSIsInNwZWVkIiwidmVsb2NpdHkiLCJhY2NlbGVyYXRpb24iLCJ2ZWN0b3IiLCJ0aGV0YSIsInJhZGl1cyIsImNvbG9yIiwid2lkdGgiLCJoZWlnaHQiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9qcy8uL3NyYy9zY3JpcHRzL2JQYXR0ZXJucy9idWxsZXRzUGF0dGVybjMuanM/OGUxNiJdLCJzb3VyY2VzQ29udGVudCI6WyJsZXQgYnVsbGV0c1BhdHRlcm4gPSB7XHJcbiAgICAvLyBMZWZ0XHJcbiAgICAwOiB7XHJcbiAgICAgICAgeDogMCxcclxuICAgICAgICB5OiAwLFxyXG4gICAgICAgIGRhbWFnZTogMSxcclxuICAgICAgICBzcGVlZDogMyxcclxuICAgICAgICB2ZWxvY2l0eTogMC4wMixcclxuICAgICAgICBhY2NlbGVyYXRpb246IDAuMDIsXHJcbiAgICAgICAgdmVjdG9yOiBbMCwgMV0sXHJcbiAgICAgICAgdGhldGE6IDAsXHJcbiAgICAgICAgcmFkaXVzOiA2LFxyXG4gICAgICAgIGNvbG9yOiBcInllbGxvd1wiXHJcbiAgICB9LFxyXG4gICAgLy8gUmlnaHRcclxuICAgIDE6IHtcclxuICAgICAgICB4OiB0aGlzLndpZHRoLFxyXG4gICAgICAgIHk6IHRoaXMuaGVpZ2h0LFxyXG4gICAgICAgIHNwZWVkOiAzLFxyXG4gICAgICAgIGRhbWFnZTogMSxcclxuICAgICAgICB2ZWxvY2l0eTogMC4wMixcclxuICAgICAgICBhY2NlbGVyYXRpb246IDAuMDIsXHJcbiAgICAgICAgdmVjdG9yOiBbMCwgLTFdLFxyXG4gICAgICAgIHRoZXRhOiAwLFxyXG4gICAgICAgIHJhZGl1czogNixcclxuICAgICAgICBjb2xvcjogXCJ5ZWxsb3dcIlxyXG4gICAgfSxcclxuICAgIDI6IHtcclxuICAgICAgICB4OiAwLFxyXG4gICAgICAgIHk6IDAsXHJcbiAgICAgICAgZGFtYWdlOiAxLFxyXG4gICAgICAgIHNwZWVkOiAzLFxyXG4gICAgICAgIHZlbG9jaXR5OiAwLjAyLFxyXG4gICAgICAgIGFjY2VsZXJhdGlvbjogMC4wMixcclxuICAgICAgICB2ZWN0b3I6IFstMSwgMF0sXHJcbiAgICAgICAgdGhldGE6IDAsXHJcbiAgICAgICAgcmFkaXVzOiA2LFxyXG4gICAgICAgIGNvbG9yOiBcInllbGxvd1wiXHJcbiAgICB9LFxyXG4gICAgLy8gUmlnaHRcclxuICAgIDM6IHtcclxuICAgICAgICB4OiB0aGlzLndpZHRoLFxyXG4gICAgICAgIHk6IHRoaXMuaGVpZ2h0LFxyXG4gICAgICAgIHNwZWVkOiAzLFxyXG4gICAgICAgIGRhbWFnZTogMSxcclxuICAgICAgICB2ZWxvY2l0eTogMC4wMixcclxuICAgICAgICBhY2NlbGVyYXRpb246IDAuMDIsXHJcbiAgICAgICAgdmVjdG9yOiBbMSwgMF0sXHJcbiAgICAgICAgdGhldGE6IDAsXHJcbiAgICAgICAgcmFkaXVzOiA2LFxyXG4gICAgICAgIGNvbG9yOiBcInllbGxvd1wiXHJcbiAgICB9LFxyXG5cclxufVxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBidWxsZXRzUGF0dGVybjsiXSwibWFwcGluZ3MiOiJBQUFBLElBQUlBLGNBQWMsR0FBRztFQUNqQjtFQUNBLENBQUMsRUFBRTtJQUNDQyxDQUFDLEVBQUUsQ0FBQztJQUNKQyxDQUFDLEVBQUUsQ0FBQztJQUNKQyxNQUFNLEVBQUUsQ0FBQztJQUNUQyxLQUFLLEVBQUUsQ0FBQztJQUNSQyxRQUFRLEVBQUUsSUFBSTtJQUNkQyxZQUFZLEVBQUUsSUFBSTtJQUNsQkMsTUFBTSxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQztJQUNkQyxLQUFLLEVBQUUsQ0FBQztJQUNSQyxNQUFNLEVBQUUsQ0FBQztJQUNUQyxLQUFLLEVBQUU7RUFDWCxDQUFDO0VBQ0Q7RUFDQSxDQUFDLEVBQUU7SUFDQ1QsQ0FBQyxFQUFFLElBQUksQ0FBQ1UsS0FBSztJQUNiVCxDQUFDLEVBQUUsSUFBSSxDQUFDVSxNQUFNO0lBQ2RSLEtBQUssRUFBRSxDQUFDO0lBQ1JELE1BQU0sRUFBRSxDQUFDO0lBQ1RFLFFBQVEsRUFBRSxJQUFJO0lBQ2RDLFlBQVksRUFBRSxJQUFJO0lBQ2xCQyxNQUFNLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7SUFDZkMsS0FBSyxFQUFFLENBQUM7SUFDUkMsTUFBTSxFQUFFLENBQUM7SUFDVEMsS0FBSyxFQUFFO0VBQ1gsQ0FBQztFQUNELENBQUMsRUFBRTtJQUNDVCxDQUFDLEVBQUUsQ0FBQztJQUNKQyxDQUFDLEVBQUUsQ0FBQztJQUNKQyxNQUFNLEVBQUUsQ0FBQztJQUNUQyxLQUFLLEVBQUUsQ0FBQztJQUNSQyxRQUFRLEVBQUUsSUFBSTtJQUNkQyxZQUFZLEVBQUUsSUFBSTtJQUNsQkMsTUFBTSxFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDO0lBQ2ZDLEtBQUssRUFBRSxDQUFDO0lBQ1JDLE1BQU0sRUFBRSxDQUFDO0lBQ1RDLEtBQUssRUFBRTtFQUNYLENBQUM7RUFDRDtFQUNBLENBQUMsRUFBRTtJQUNDVCxDQUFDLEVBQUUsSUFBSSxDQUFDVSxLQUFLO0lBQ2JULENBQUMsRUFBRSxJQUFJLENBQUNVLE1BQU07SUFDZFIsS0FBSyxFQUFFLENBQUM7SUFDUkQsTUFBTSxFQUFFLENBQUM7SUFDVEUsUUFBUSxFQUFFLElBQUk7SUFDZEMsWUFBWSxFQUFFLElBQUk7SUFDbEJDLE1BQU0sRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUM7SUFDZEMsS0FBSyxFQUFFLENBQUM7SUFDUkMsTUFBTSxFQUFFLENBQUM7SUFDVEMsS0FBSyxFQUFFO0VBQ1g7QUFFSixDQUFDO0FBRURHLE1BQU0sQ0FBQ0MsT0FBTyxHQUFHZCxjQUFjIn0=\n//# sourceURL=webpack-internal:///./src/scripts/bPatterns/bulletsPattern3.js\n");

/***/ }),

/***/ "./src/scripts/bPatterns/bulletsPattern4.js":
/*!**************************************************!*\
  !*** ./src/scripts/bPatterns/bulletsPattern4.js ***!
  \**************************************************/
/***/ (function(module) {

eval("let bulletsPattern = {\n  // Left\n  0: {\n    x: 0,\n    y: 0,\n    damage: 1,\n    speed: 4,\n    velocity: 0.02,\n    acceleration: 0.02,\n    vector: [0, 1],\n    theta: 0,\n    radius: 3,\n    color: \"#4133FF\"\n  },\n  // Right\n  1: {\n    x: this.width,\n    y: this.height,\n    speed: 4,\n    damage: 1,\n    velocity: 0.02,\n    acceleration: 0.02,\n    vector: [0, -1],\n    theta: 0,\n    radius: 3,\n    color: \"#4133FF\"\n  },\n  2: {\n    x: 0,\n    y: 0,\n    damage: 1,\n    speed: 4,\n    velocity: 0.02,\n    acceleration: 0.02,\n    vector: [-1, 0],\n    theta: 0,\n    radius: 3,\n    color: \"#4133FF\"\n  },\n  // Right\n  3: {\n    x: this.width,\n    y: this.height,\n    speed: 4,\n    damage: 1,\n    velocity: 0.02,\n    acceleration: 0.02,\n    vector: [1, 0],\n    theta: 0,\n    radius: 3,\n    color: \"#4133FF\"\n  }\n};\nmodule.exports = bulletsPattern;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9iUGF0dGVybnMvYnVsbGV0c1BhdHRlcm40LmpzLmpzIiwibmFtZXMiOlsiYnVsbGV0c1BhdHRlcm4iLCJ4IiwieSIsImRhbWFnZSIsInNwZWVkIiwidmVsb2NpdHkiLCJhY2NlbGVyYXRpb24iLCJ2ZWN0b3IiLCJ0aGV0YSIsInJhZGl1cyIsImNvbG9yIiwid2lkdGgiLCJoZWlnaHQiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9qcy8uL3NyYy9zY3JpcHRzL2JQYXR0ZXJucy9idWxsZXRzUGF0dGVybjQuanM/Y2ZmZCJdLCJzb3VyY2VzQ29udGVudCI6WyJsZXQgYnVsbGV0c1BhdHRlcm4gPSB7XHJcbiAgICAvLyBMZWZ0XHJcbiAgICAwOiB7XHJcbiAgICAgICAgeDogMCxcclxuICAgICAgICB5OiAwLFxyXG4gICAgICAgIGRhbWFnZTogMSxcclxuICAgICAgICBzcGVlZDogNCxcclxuICAgICAgICB2ZWxvY2l0eTogMC4wMixcclxuICAgICAgICBhY2NlbGVyYXRpb246IDAuMDIsXHJcbiAgICAgICAgdmVjdG9yOiBbMCwgMV0sXHJcbiAgICAgICAgdGhldGE6IDAsXHJcbiAgICAgICAgcmFkaXVzOiAzLFxyXG4gICAgICAgIGNvbG9yOiBcIiM0MTMzRkZcIlxyXG4gICAgfSxcclxuICAgIC8vIFJpZ2h0XHJcbiAgICAxOiB7XHJcbiAgICAgICAgeDogdGhpcy53aWR0aCxcclxuICAgICAgICB5OiB0aGlzLmhlaWdodCxcclxuICAgICAgICBzcGVlZDogNCxcclxuICAgICAgICBkYW1hZ2U6IDEsXHJcbiAgICAgICAgdmVsb2NpdHk6IDAuMDIsXHJcbiAgICAgICAgYWNjZWxlcmF0aW9uOiAwLjAyLFxyXG4gICAgICAgIHZlY3RvcjogWzAsIC0xXSxcclxuICAgICAgICB0aGV0YTogMCxcclxuICAgICAgICByYWRpdXM6IDMsXHJcbiAgICAgICAgY29sb3I6IFwiIzQxMzNGRlwiXHJcbiAgICB9LFxyXG4gICAgMjoge1xyXG4gICAgICAgIHg6IDAsXHJcbiAgICAgICAgeTogMCxcclxuICAgICAgICBkYW1hZ2U6IDEsXHJcbiAgICAgICAgc3BlZWQ6IDQsXHJcbiAgICAgICAgdmVsb2NpdHk6IDAuMDIsXHJcbiAgICAgICAgYWNjZWxlcmF0aW9uOiAwLjAyLFxyXG4gICAgICAgIHZlY3RvcjogWy0xLCAwXSxcclxuICAgICAgICB0aGV0YTogMCxcclxuICAgICAgICByYWRpdXM6IDMsXHJcbiAgICAgICAgY29sb3I6IFwiIzQxMzNGRlwiXHJcbiAgICB9LFxyXG4gICAgLy8gUmlnaHRcclxuICAgIDM6IHtcclxuICAgICAgICB4OiB0aGlzLndpZHRoLFxyXG4gICAgICAgIHk6IHRoaXMuaGVpZ2h0LFxyXG4gICAgICAgIHNwZWVkOiA0LFxyXG4gICAgICAgIGRhbWFnZTogMSxcclxuICAgICAgICB2ZWxvY2l0eTogMC4wMixcclxuICAgICAgICBhY2NlbGVyYXRpb246IDAuMDIsXHJcbiAgICAgICAgdmVjdG9yOiBbMSwgMF0sXHJcbiAgICAgICAgdGhldGE6IDAsXHJcbiAgICAgICAgcmFkaXVzOiAzLFxyXG4gICAgICAgIGNvbG9yOiBcIiM0MTMzRkZcIlxyXG4gICAgfSxcclxuXHJcbn1cclxuXHJcbm1vZHVsZS5leHBvcnRzID0gYnVsbGV0c1BhdHRlcm47Il0sIm1hcHBpbmdzIjoiQUFBQSxJQUFJQSxjQUFjLEdBQUc7RUFDakI7RUFDQSxDQUFDLEVBQUU7SUFDQ0MsQ0FBQyxFQUFFLENBQUM7SUFDSkMsQ0FBQyxFQUFFLENBQUM7SUFDSkMsTUFBTSxFQUFFLENBQUM7SUFDVEMsS0FBSyxFQUFFLENBQUM7SUFDUkMsUUFBUSxFQUFFLElBQUk7SUFDZEMsWUFBWSxFQUFFLElBQUk7SUFDbEJDLE1BQU0sRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUM7SUFDZEMsS0FBSyxFQUFFLENBQUM7SUFDUkMsTUFBTSxFQUFFLENBQUM7SUFDVEMsS0FBSyxFQUFFO0VBQ1gsQ0FBQztFQUNEO0VBQ0EsQ0FBQyxFQUFFO0lBQ0NULENBQUMsRUFBRSxJQUFJLENBQUNVLEtBQUs7SUFDYlQsQ0FBQyxFQUFFLElBQUksQ0FBQ1UsTUFBTTtJQUNkUixLQUFLLEVBQUUsQ0FBQztJQUNSRCxNQUFNLEVBQUUsQ0FBQztJQUNURSxRQUFRLEVBQUUsSUFBSTtJQUNkQyxZQUFZLEVBQUUsSUFBSTtJQUNsQkMsTUFBTSxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO0lBQ2ZDLEtBQUssRUFBRSxDQUFDO0lBQ1JDLE1BQU0sRUFBRSxDQUFDO0lBQ1RDLEtBQUssRUFBRTtFQUNYLENBQUM7RUFDRCxDQUFDLEVBQUU7SUFDQ1QsQ0FBQyxFQUFFLENBQUM7SUFDSkMsQ0FBQyxFQUFFLENBQUM7SUFDSkMsTUFBTSxFQUFFLENBQUM7SUFDVEMsS0FBSyxFQUFFLENBQUM7SUFDUkMsUUFBUSxFQUFFLElBQUk7SUFDZEMsWUFBWSxFQUFFLElBQUk7SUFDbEJDLE1BQU0sRUFBRSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQztJQUNmQyxLQUFLLEVBQUUsQ0FBQztJQUNSQyxNQUFNLEVBQUUsQ0FBQztJQUNUQyxLQUFLLEVBQUU7RUFDWCxDQUFDO0VBQ0Q7RUFDQSxDQUFDLEVBQUU7SUFDQ1QsQ0FBQyxFQUFFLElBQUksQ0FBQ1UsS0FBSztJQUNiVCxDQUFDLEVBQUUsSUFBSSxDQUFDVSxNQUFNO0lBQ2RSLEtBQUssRUFBRSxDQUFDO0lBQ1JELE1BQU0sRUFBRSxDQUFDO0lBQ1RFLFFBQVEsRUFBRSxJQUFJO0lBQ2RDLFlBQVksRUFBRSxJQUFJO0lBQ2xCQyxNQUFNLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDO0lBQ2RDLEtBQUssRUFBRSxDQUFDO0lBQ1JDLE1BQU0sRUFBRSxDQUFDO0lBQ1RDLEtBQUssRUFBRTtFQUNYO0FBRUosQ0FBQztBQUVERyxNQUFNLENBQUNDLE9BQU8sR0FBR2QsY0FBYyJ9\n//# sourceURL=webpack-internal:///./src/scripts/bPatterns/bulletsPattern4.js\n");

/***/ }),

/***/ "./src/scripts/bullet.js":
/*!*******************************!*\
  !*** ./src/scripts/bullet.js ***!
  \*******************************/
/***/ (function(module) {

eval("class Bullet {\n  constructor(x, y) {\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    this.x = options.x || x;\n    this.y = options.y || y;\n    this.damage = options.damage;\n    this.speed = options.speed;\n    this.velocity = options.velocity || 0;\n    this.strokeColor = options.strokeColor || \"white\";\n    this.color = options.color || \"black\";\n    this.radius = options.radius || 5;\n    this.vector = options.vector || [0, -1];\n  }\n  isCollidingWith() {\n    let sprite = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    if (this.x <= sprite.width + sprite.x && this.x >= sprite.x && this.y <= sprite.y + sprite.height && this.y >= sprite.y) {\n      return true;\n    }\n    return false;\n  }\n  draw(ctx) {\n    ctx.strokeStyle = this.strokeColor;\n    ctx.fillStyle = this.color;\n    this.speed += this.velocity;\n    this.x += this.vector[0] * this.speed;\n    this.y += this.vector[1] * this.speed;\n    ctx.beginPath();\n    ctx.arc(this.x, this.y, this.radius, 0, Math.PI * 2, true);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.fill();\n  }\n}\nmodule.exports = Bullet;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9idWxsZXQuanMuanMiLCJuYW1lcyI6WyJCdWxsZXQiLCJjb25zdHJ1Y3RvciIsIngiLCJ5Iiwib3B0aW9ucyIsImRhbWFnZSIsInNwZWVkIiwidmVsb2NpdHkiLCJzdHJva2VDb2xvciIsImNvbG9yIiwicmFkaXVzIiwidmVjdG9yIiwiaXNDb2xsaWRpbmdXaXRoIiwic3ByaXRlIiwid2lkdGgiLCJoZWlnaHQiLCJkcmF3IiwiY3R4Iiwic3Ryb2tlU3R5bGUiLCJmaWxsU3R5bGUiLCJiZWdpblBhdGgiLCJhcmMiLCJNYXRoIiwiUEkiLCJjbG9zZVBhdGgiLCJzdHJva2UiLCJmaWxsIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vanMvLi9zcmMvc2NyaXB0cy9idWxsZXQuanM/MzZiYyJdLCJzb3VyY2VzQ29udGVudCI6WyJjbGFzcyBCdWxsZXQge1xyXG4gICAgY29uc3RydWN0b3IoeCwgeSwgb3B0aW9ucyA9IHt9KSB7XHJcbiAgICAgICAgdGhpcy54ID0gb3B0aW9ucy54IHx8IHg7XHJcbiAgICAgICAgdGhpcy55ID0gb3B0aW9ucy55IHx8IHk7XHJcbiAgICAgICAgdGhpcy5kYW1hZ2UgPSBvcHRpb25zLmRhbWFnZTtcclxuICAgICAgICB0aGlzLnNwZWVkID0gb3B0aW9ucy5zcGVlZDtcclxuXHJcbiAgICAgICAgdGhpcy52ZWxvY2l0eSA9IG9wdGlvbnMudmVsb2NpdHkgfHwgMDtcclxuICAgICAgICB0aGlzLnN0cm9rZUNvbG9yID0gb3B0aW9ucy5zdHJva2VDb2xvciB8fCBcIndoaXRlXCI7XHJcbiAgICAgICAgdGhpcy5jb2xvciA9IG9wdGlvbnMuY29sb3IgfHwgXCJibGFja1wiO1xyXG4gICAgICAgIHRoaXMucmFkaXVzID0gb3B0aW9ucy5yYWRpdXMgfHwgNTtcclxuICAgICAgICB0aGlzLnZlY3RvciA9IG9wdGlvbnMudmVjdG9yIHx8IFswLCAtMV07XHJcbiAgICB9XHJcblxyXG4gICAgaXNDb2xsaWRpbmdXaXRoKHNwcml0ZSA9IHt9KSB7XHJcbiAgICAgICAgaWYgKHRoaXMueCA8PSBzcHJpdGUud2lkdGggKyBzcHJpdGUueCAmJlxyXG4gICAgICAgICAgICB0aGlzLnggPj0gc3ByaXRlLnggJiZcclxuICAgICAgICAgICAgdGhpcy55IDw9IHNwcml0ZS55ICsgc3ByaXRlLmhlaWdodCAmJlxyXG4gICAgICAgICAgICB0aGlzLnkgPj0gc3ByaXRlLnkpIHtcclxuICAgICAgICAgICAgcmV0dXJuIHRydWU7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICB9XHJcblxyXG4gICAgZHJhdyhjdHgpIHtcclxuICAgICAgICBjdHguc3Ryb2tlU3R5bGUgPSB0aGlzLnN0cm9rZUNvbG9yXHJcbiAgICAgICAgY3R4LmZpbGxTdHlsZSA9IHRoaXMuY29sb3JcclxuICAgICAgICB0aGlzLnNwZWVkICs9IHRoaXMudmVsb2NpdHk7XHJcbiAgICAgICAgdGhpcy54ICs9ICh0aGlzLnZlY3RvclswXSAqIHRoaXMuc3BlZWQpO1xyXG4gICAgICAgIHRoaXMueSArPSAodGhpcy52ZWN0b3JbMV0gKiB0aGlzLnNwZWVkKTtcclxuICAgICAgICBjdHguYmVnaW5QYXRoKCk7XHJcbiAgICAgICAgY3R4LmFyYyh0aGlzLngsIHRoaXMueSwgdGhpcy5yYWRpdXMsIDAsIE1hdGguUEkgKiAyLCB0cnVlKVxyXG4gICAgICAgIGN0eC5jbG9zZVBhdGgoKTtcclxuICAgICAgICBjdHguc3Ryb2tlKCk7XHJcbiAgICAgICAgY3R4LmZpbGwoKTtcclxuICAgIH1cclxuXHJcbn1cclxuXHJcbm1vZHVsZS5leHBvcnRzID0gQnVsbGV0OyJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsTUFBTSxDQUFDO0VBQ1RDLFdBQVcsQ0FBQ0MsQ0FBQyxFQUFFQyxDQUFDLEVBQWdCO0lBQUEsSUFBZEMsT0FBTyx1RUFBRyxDQUFDLENBQUM7SUFDMUIsSUFBSSxDQUFDRixDQUFDLEdBQUdFLE9BQU8sQ0FBQ0YsQ0FBQyxJQUFJQSxDQUFDO0lBQ3ZCLElBQUksQ0FBQ0MsQ0FBQyxHQUFHQyxPQUFPLENBQUNELENBQUMsSUFBSUEsQ0FBQztJQUN2QixJQUFJLENBQUNFLE1BQU0sR0FBR0QsT0FBTyxDQUFDQyxNQUFNO0lBQzVCLElBQUksQ0FBQ0MsS0FBSyxHQUFHRixPQUFPLENBQUNFLEtBQUs7SUFFMUIsSUFBSSxDQUFDQyxRQUFRLEdBQUdILE9BQU8sQ0FBQ0csUUFBUSxJQUFJLENBQUM7SUFDckMsSUFBSSxDQUFDQyxXQUFXLEdBQUdKLE9BQU8sQ0FBQ0ksV0FBVyxJQUFJLE9BQU87SUFDakQsSUFBSSxDQUFDQyxLQUFLLEdBQUdMLE9BQU8sQ0FBQ0ssS0FBSyxJQUFJLE9BQU87SUFDckMsSUFBSSxDQUFDQyxNQUFNLEdBQUdOLE9BQU8sQ0FBQ00sTUFBTSxJQUFJLENBQUM7SUFDakMsSUFBSSxDQUFDQyxNQUFNLEdBQUdQLE9BQU8sQ0FBQ08sTUFBTSxJQUFJLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO0VBQzNDO0VBRUFDLGVBQWUsR0FBYztJQUFBLElBQWJDLE1BQU0sdUVBQUcsQ0FBQyxDQUFDO0lBQ3ZCLElBQUksSUFBSSxDQUFDWCxDQUFDLElBQUlXLE1BQU0sQ0FBQ0MsS0FBSyxHQUFHRCxNQUFNLENBQUNYLENBQUMsSUFDakMsSUFBSSxDQUFDQSxDQUFDLElBQUlXLE1BQU0sQ0FBQ1gsQ0FBQyxJQUNsQixJQUFJLENBQUNDLENBQUMsSUFBSVUsTUFBTSxDQUFDVixDQUFDLEdBQUdVLE1BQU0sQ0FBQ0UsTUFBTSxJQUNsQyxJQUFJLENBQUNaLENBQUMsSUFBSVUsTUFBTSxDQUFDVixDQUFDLEVBQUU7TUFDcEIsT0FBTyxJQUFJO0lBQ2Y7SUFFQSxPQUFPLEtBQUs7RUFDaEI7RUFFQWEsSUFBSSxDQUFDQyxHQUFHLEVBQUU7SUFDTkEsR0FBRyxDQUFDQyxXQUFXLEdBQUcsSUFBSSxDQUFDVixXQUFXO0lBQ2xDUyxHQUFHLENBQUNFLFNBQVMsR0FBRyxJQUFJLENBQUNWLEtBQUs7SUFDMUIsSUFBSSxDQUFDSCxLQUFLLElBQUksSUFBSSxDQUFDQyxRQUFRO0lBQzNCLElBQUksQ0FBQ0wsQ0FBQyxJQUFLLElBQUksQ0FBQ1MsTUFBTSxDQUFDLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQ0wsS0FBTTtJQUN2QyxJQUFJLENBQUNILENBQUMsSUFBSyxJQUFJLENBQUNRLE1BQU0sQ0FBQyxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUNMLEtBQU07SUFDdkNXLEdBQUcsQ0FBQ0csU0FBUyxFQUFFO0lBQ2ZILEdBQUcsQ0FBQ0ksR0FBRyxDQUFDLElBQUksQ0FBQ25CLENBQUMsRUFBRSxJQUFJLENBQUNDLENBQUMsRUFBRSxJQUFJLENBQUNPLE1BQU0sRUFBRSxDQUFDLEVBQUVZLElBQUksQ0FBQ0MsRUFBRSxHQUFHLENBQUMsRUFBRSxJQUFJLENBQUM7SUFDMUROLEdBQUcsQ0FBQ08sU0FBUyxFQUFFO0lBQ2ZQLEdBQUcsQ0FBQ1EsTUFBTSxFQUFFO0lBQ1pSLEdBQUcsQ0FBQ1MsSUFBSSxFQUFFO0VBQ2Q7QUFFSjtBQUVBQyxNQUFNLENBQUNDLE9BQU8sR0FBRzVCLE1BQU0ifQ==\n//# sourceURL=webpack-internal:///./src/scripts/bullet.js\n");

/***/ }),

/***/ "./src/scripts/bulletController.js":
/*!*****************************************!*\
  !*** ./src/scripts/bulletController.js ***!
  \*****************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nconst Bullet = __webpack_require__(/*! ./bullet */ \"./src/scripts/bullet.js\");\nclass BulletController {\n  constructor() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    _defineProperty(this, \"bullets\", []);\n    _defineProperty(this, \"timeTillNextShot\", 0);\n  }\n  shoot(x, y) {\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    if (this.timeTillNextShot <= 0) {\n      const bullets = options.bullets || [new Bullet(x, y, options)];\n      this.bullets.push(...bullets);\n      this.timeTillNextShot = options.delay;\n      if (options.shootSoundEff) {\n        const sound = options.shootSoundEff;\n        options.muted ? sound.volume = 0 : sound.volume = 0.002;\n        sound.currentTime = 0;\n        sound.play();\n      }\n      ;\n    }\n    this.timeTillNextShot--;\n  }\n  draw(ctx) {\n    this.bullets.forEach(bullet => {\n      if (this.isBulletOffScreen(bullet)) {\n        this.bullets.splice(this.bullets.indexOf(bullet), 1);\n      }\n      bullet.draw(ctx);\n    });\n  }\n  isBulletOffScreen(b) {\n    return b.y <= -b.radius * 2 || b.x <= -b.radius * 2 || b.y >= 720 + b.radius * 2 || b.x >= 1280 + b.radius * 2;\n  }\n  collidesWith(sprite) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    this.bullets.forEach(bullet => {\n      if (bullet.isCollidingWith(sprite) && sprite.collideAble) {\n        sprite.takeDamage(bullet.damage, options);\n        this.bullets.splice(this.bullets.indexOf(bullet), 1);\n        return true;\n      } else {\n        return false;\n      }\n    });\n  }\n}\nmodule.exports = BulletController;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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LENBQUM7RUFDTjtBQUNKO0FBRUFZLE1BQU0sQ0FBQ0MsT0FBTyxHQUFHaEMsZ0JBQWdCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vanMvLi9zcmMvc2NyaXB0cy9idWxsZXRDb250cm9sbGVyLmpzP2QxZjgiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgQnVsbGV0ID0gcmVxdWlyZShcIi4vYnVsbGV0XCIpO1xyXG5cclxuY2xhc3MgQnVsbGV0Q29udHJvbGxlciB7XHJcbiAgICBidWxsZXRzID0gW107XHJcbiAgICB0aW1lVGlsbE5leHRTaG90ID0gMDtcclxuXHJcbiAgICBjb25zdHJ1Y3RvcihvcHRpb25zID0ge30pIHtcclxuXHJcbiAgICB9O1xyXG5cclxuICAgIHNob290KHgseSxvcHRpb25zID0ge30pIHtcclxuICAgICAgICBpZiAodGhpcy50aW1lVGlsbE5leHRTaG90IDw9IDApIHtcclxuICAgICAgICAgICAgY29uc3QgYnVsbGV0cyA9IG9wdGlvbnMuYnVsbGV0cyB8fCBbbmV3IEJ1bGxldCh4LHksb3B0aW9ucyldXHJcbiAgICAgICAgICAgIHRoaXMuYnVsbGV0cy5wdXNoKC4uLmJ1bGxldHMpO1xyXG4gICAgICAgICAgICB0aGlzLnRpbWVUaWxsTmV4dFNob3QgPSBvcHRpb25zLmRlbGF5O1xyXG4gICAgICAgICAgICBpZiAob3B0aW9ucy5zaG9vdFNvdW5kRWZmKSB7XHJcbiAgICAgICAgICAgICAgICBjb25zdCBzb3VuZCA9IG9wdGlvbnMuc2hvb3RTb3VuZEVmZlxyXG4gICAgICAgICAgICAgICAgb3B0aW9ucy5tdXRlZCA/IHNvdW5kLnZvbHVtZSA9IDAgOiBzb3VuZC52b2x1bWUgPSAwLjAwMjtcclxuICAgICAgICAgICAgICAgIHNvdW5kLmN1cnJlbnRUaW1lID0gMDtcclxuICAgICAgICAgICAgICAgIHNvdW5kLnBsYXkoKVxyXG4gICAgICAgICAgICB9O1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLnRpbWVUaWxsTmV4dFNob3QtLTtcclxuICAgIH1cclxuXHJcbiAgICBkcmF3KGN0eCkge1xyXG4gICAgICAgIHRoaXMuYnVsbGV0cy5mb3JFYWNoKGJ1bGxldCA9PiB7XHJcbiAgICAgICAgICAgIGlmICh0aGlzLmlzQnVsbGV0T2ZmU2NyZWVuKGJ1bGxldCkpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuYnVsbGV0cy5zcGxpY2UodGhpcy5idWxsZXRzLmluZGV4T2YoYnVsbGV0KSwgMSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYnVsbGV0LmRyYXcoY3R4KTtcclxuICAgICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICBpc0J1bGxldE9mZlNjcmVlbihiKSB7XHJcbiAgICAgICAgcmV0dXJuIChiLnkgPD0gLWIucmFkaXVzICogMiB8fFxyXG4gICAgICAgICAgICBiLnggPD0gLWIucmFkaXVzICogMiB8fFxyXG4gICAgICAgICAgICBiLnkgPj0gNzIwICsgYi5yYWRpdXMgKiAyIHx8XHJcbiAgICAgICAgICAgIGIueCA+PSAxMjgwICsgYi5yYWRpdXMgKiAyKTtcclxuICAgIH1cclxuXHJcbiAgICBjb2xsaWRlc1dpdGgoc3ByaXRlLCBvcHRpb25zID0ge30pIHtcclxuICAgICAgICB0aGlzLmJ1bGxldHMuZm9yRWFjaChidWxsZXQgPT4ge1xyXG4gICAgICAgICAgICBpZiAoYnVsbGV0LmlzQ29sbGlkaW5nV2l0aChzcHJpdGUpICYmIHNwcml0ZS5jb2xsaWRlQWJsZSkge1xyXG4gICAgICAgICAgICAgICAgc3ByaXRlLnRha2VEYW1hZ2UoYnVsbGV0LmRhbWFnZSwgb3B0aW9ucyk7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmJ1bGxldHMuc3BsaWNlKHRoaXMuYnVsbGV0cy5pbmRleE9mKGJ1bGxldCksIDEpO1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2VcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG59XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IEJ1bGxldENvbnRyb2xsZXI7Il0sIm5hbWVzIjpbIkJ1bGxldCIsInJlcXVpcmUiLCJCdWxsZXRDb250cm9sbGVyIiwiY29uc3RydWN0b3IiLCJvcHRpb25zIiwic2hvb3QiLCJ4IiwieSIsInRpbWVUaWxsTmV4dFNob3QiLCJidWxsZXRzIiwicHVzaCIsImRlbGF5Iiwic2hvb3RTb3VuZEVmZiIsInNvdW5kIiwibXV0ZWQiLCJ2b2x1bWUiLCJjdXJyZW50VGltZSIsInBsYXkiLCJkcmF3IiwiY3R4IiwiZm9yRWFjaCIsImJ1bGxldCIsImlzQnVsbGV0T2ZmU2NyZWVuIiwic3BsaWNlIiwiaW5kZXhPZiIsImIiLCJyYWRpdXMiLCJjb2xsaWRlc1dpdGgiLCJzcHJpdGUiLCJpc0NvbGxpZGluZ1dpdGgiLCJjb2xsaWRlQWJsZSIsInRha2VEYW1hZ2UiLCJkYW1hZ2UiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/scripts/bulletController.js\n");

/***/ }),

/***/ "./src/scripts/enemy.js":
/*!******************************!*\
  !*** ./src/scripts/enemy.js ***!
  \******************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nconst Bullet = __webpack_require__(/*! ./bullet.js */ \"./src/scripts/bullet.js\");\nconst bulletsPattern = __webpack_require__(/*! ./bPatterns/bulletsPattern1.js */ \"./src/scripts/bPatterns/bulletsPattern1.js\");\nclass Enemy {\n  constructor(x, y, bc) {\n    let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    _defineProperty(this, \"spots\", [[1230, 50], [50, 50], [50, 670], [1230, 670]]);\n    _defineProperty(this, \"images\", [new Image(), new Image(), new Image(), new Image()]);\n    this.x = x;\n    this.y = y;\n    this.bulletController = bc;\n    this.health = options.health || 100;\n    this.maxHp = this.health;\n    this.worth = options.worth || 100;\n    this.radius = options.radius || 20;\n    this.color = options.color || \"red\";\n    this.vector = options.vector || [0, 0];\n    this.originalSpeed = options.speed || 10;\n    this.bulletDelay = options.bulletDelay || 35;\n    this.speed = this.originalSpeed;\n    this.height = this.radius * 2;\n    this.width = this.radius * 2;\n    this.deathSound = new Audio(\"./sounds/enemyDeath.wav\");\n    this.deathSound.volume = 0.06;\n    this.loopLoc = options.loopLoc || 1;\n    this.frame = 0;\n    this.bullets = [];\n    this.collideAble = true;\n    this.updateImages();\n  }\n  shoot() {\n    this._addBullets();\n    this.bulletController.shoot(null, null, {\n      bullets: this.bullets.splice(0),\n      delay: this.bulletDelay\n    });\n  }\n  _addBullets() {\n    for (let i = 0; i < Object.keys(bulletsPattern).length; i++) {\n      const params = bulletsPattern[i];\n      this.bullets.push(new Bullet(this.x + this.radius, this.y + this.radius, params));\n    }\n  }\n  updateImages() {\n    this.images.forEach((image, imageIdx) => {\n      image.width = this.radius * 2;\n      image.height = this.radius * 2;\n      image.src = `./images/sprites/holloweenSprites/AnimatedObjects/Pumpkin2_${imageIdx + 1}.png`;\n    });\n  }\n  draw(ctx) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    if (this.frame >= this.images.length) this.frame = 0;\n    this.muted ? this.deathSound.volume = 0 : this.deathSound.volume = 0.07;\n    this.shoot(options);\n    this.movementLoop();\n    ctx.shadowColor = this.color;\n    ctx.shadowBlur = 30;\n    ctx.drawImage(this.images[this.frame], this.x - this.radius / 2, this.y - this.radius / 1.5, this.radius * 3, this.radius * 3);\n    this.frame++;\n    // ctx.fillStyle = \"red\"\n    // ctx.fillRect(this.x,this.y,this.width,this.height)\n    // ctx.fillStyle = this.color;\n    // ctx.beginPath();\n    // ctx.arc(this.x + this.radius, this.y + this.radius, this.radius, 0, 2 * Math.PI, true)\n    // ctx.closePath();\n    // ctx.fill();\n  }\n\n  movementLoop() {\n    switch (this.loopLoc) {\n      case 0:\n        this._moveTo(1);\n        break;\n      case 1:\n        this._moveTo(2);\n        break;\n      case 2:\n        this._moveTo(3);\n        break;\n      case 3:\n        this._moveTo(0);\n        break;\n      default:\n        this.loopLoc = 0;\n        break;\n    }\n  }\n  _moveTo(num) {\n    let xDif = this.spots[num][0] - this.x;\n    let yDif = this.spots[num][1] - this.y;\n    let divisor = Math.max(Math.abs(xDif), Math.abs(yDif));\n    divisor = Math.abs(divisor) < 1 ? 1 : divisor;\n    let xVector = xDif / divisor;\n    let yVector = yDif / divisor;\n    this.vector = [xVector, yVector];\n    if (Math.max(Math.abs(xDif), Math.abs(yDif)) < 20) this.speed = 2;\n    this.speed = this.speed < 1 ? 1 : this.speed;\n    this.x += this.vector[0] * this.speed;\n    this.y += this.vector[1] * this.speed;\n    if (this.x < this.spots[num][0] + 2 && this.x > this.spots[num][0] - 2 && this.y < this.spots[num][1] + 2 && this.y > this.spots[num][1] - 2 && !this.timeOutCalled) {\n      this.speed = 0;\n      this.timeOutCalled = true;\n      setTimeout(() => {\n        this.loopLoc += 1;\n        this.speed = this.originalSpeed;\n        this.timeOutCalled = false;\n      }, 40);\n    }\n  }\n  takeDamage(num) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    this.health -= num;\n    if (this.health <= 0) {\n      if (!options.muted) {\n        this.deathSound.currentTime = 0;\n        this.deathSound.play();\n      }\n    }\n  }\n}\nmodule.exports = Enemy;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/enemy.js\n");

/***/ }),

/***/ "./src/scripts/enemyController.js":
/*!****************************************!*\
  !*** ./src/scripts/enemyController.js ***!
  \****************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nconst BulletController = __webpack_require__(/*! ./bulletController */ \"./src/scripts/bulletController.js\");\nconst Enemy = __webpack_require__(/*! ./enemy */ \"./src/scripts/enemy.js\");\nconst Ghost = __webpack_require__(/*! ./ghost */ \"./src/scripts/ghost.js\");\nconst Seeker = __webpack_require__(/*! ./seeker */ \"./src/scripts/seeker.js\");\nconst Squishy = __webpack_require__(/*! ./squish */ \"./src/scripts/squish.js\");\nclass EnemyController {\n  constructor(canvas) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    _defineProperty(this, \"enemies\", []);\n    _defineProperty(this, \"_generateWave1\", () => {\n      this.enemies.push(new Squishy(1220, 20, new BulletController(), {\n        speed: 5,\n        health: 2,\n        spotX1: 20,\n        spotY1: 20,\n        spotX2: 20,\n        spotY2: 660,\n        hpMultiplier: 0.5,\n        bulletDelay: 60\n      }), new Squishy(20, 660, new BulletController(), {\n        speed: 5,\n        health: 2,\n        spotX1: 1220,\n        spotY1: 660,\n        spotX2: 1220,\n        spotY2: 20,\n        hpMultiplier: 0.5,\n        bulletDelay: 60\n      }));\n    });\n    _defineProperty(this, \"_generateWave2\", () => {\n      this.enemies.push(new Seeker(20, 660, new BulletController(), {\n        speed: 7,\n        health: 2,\n        spotX1: 1220,\n        spotY1: 20,\n        spotX2: 20,\n        spotY2: 660,\n        hpMultiplier: 1.5,\n        bulletDelay: 55\n      }), new Seeker(20, 20, new BulletController(), {\n        speed: 7,\n        health: 2,\n        spotX1: 1220,\n        spotY1: 660,\n        spotX2: 20,\n        spotY2: 20,\n        hpMultiplier: 1.5,\n        bulletDelay: 55\n      }));\n    });\n    _defineProperty(this, \"_generateWave3\", () => {\n      this.enemies.push(new Seeker(-100, 660, new BulletController(), {\n        speed: 7,\n        health: 3,\n        spotX1: 640,\n        spotY1: 660,\n        spotX2: 20,\n        spotY2: 360,\n        hpMultiplier: 1.8,\n        bulletDelay: 50\n      }), new Seeker(-100, 20, new BulletController(), {\n        speed: 7,\n        health: 3,\n        spotX1: 640,\n        spotY1: 20,\n        spotX2: 1220,\n        spotY2: 360,\n        hpMultiplier: 1.8,\n        bulletDelay: 50\n      }), new Squishy(-100, 20, new BulletController(), {\n        speed: 5,\n        health: 3,\n        spotX1: 960,\n        spotY1: 20,\n        spotX2: 960,\n        spotY2: 660,\n        hpMultiplier: 1.8,\n        bulletDelay: 50\n      }), new Squishy(-100, 660, new BulletController(), {\n        speed: 5,\n        health: 3,\n        spotX1: 320,\n        spotY1: 660,\n        spotX2: 320,\n        spotY2: 20,\n        hpMultiplier: 1.8,\n        bulletDelay: 50\n      }));\n    });\n    _defineProperty(this, \"_generateWave4\", () => {\n      this.enemies.push(new Ghost(-128, -72, new BulletController(), {\n        speed: 2,\n        health: 10,\n        spotX1: 128,\n        spotY1: 72,\n        spotX2: 1152,\n        spotY2: 648,\n        hpMultiplier: 2,\n        bulletDelay: 20\n      }), new Ghost(1408, -72, new BulletController(), {\n        speed: 2,\n        health: 10,\n        spotX1: 1152,\n        spotY1: 72,\n        spotX2: 128,\n        spotY2: 648,\n        hpMultiplier: 2,\n        bulletDelay: 20\n      }), new Ghost(1408, 792, new BulletController(), {\n        speed: 2,\n        health: 10,\n        spotX1: 1152,\n        spotY1: 648,\n        spotX2: 128,\n        spotY2: 72,\n        hpMultiplier: 2,\n        bulletDelay: 20\n      }), new Ghost(-128, 792, new BulletController(), {\n        speed: 2,\n        health: 10,\n        spotX1: 128,\n        spotY1: 648,\n        spotX2: 1152,\n        spotY2: 72,\n        hpMultiplier: 2,\n        bulletDelay: 20\n      }));\n    });\n    _defineProperty(this, \"_generateWave5\", () => {\n      this.enemies.push(new Enemy(-128, -72, new BulletController(), {\n        loopLoc: 1\n      }), new Enemy(1408, 792, new BulletController(), {\n        loopLoc: 3\n      }));\n    });\n    _defineProperty(this, \"_generateWave6\", () => {});\n    _defineProperty(this, \"_generateWave7\", () => {});\n    _defineProperty(this, \"_generateWave8\", () => {});\n    _defineProperty(this, \"_generateWave9\", () => {});\n    _defineProperty(this, \"_generateWave10\", () => {});\n    _defineProperty(this, \"_generateInfinite\", () => {});\n    this.canvas = canvas;\n  }\n  draw(ctx) {\n    this.enemies.forEach(enemy => {\n      if (enemy.health > 0) enemy.draw(ctx);\n    });\n  }\n  createEnemies(wave) {\n    switch (wave) {\n      case 1:\n        this._generateWave1();\n        break;\n      case 2:\n        this._generateWave2();\n        break;\n      case 3:\n        this._generateWave3();\n        break;\n      case 4:\n        this._generateWave4();\n        break;\n      case 5:\n        this._generateWave5();\n        break;\n      case 6:\n        this._generateWave6();\n        break;\n      case 7:\n        this._generateWave7();\n        break;\n      case 8:\n        this._generateWave8();\n        break;\n      case 9:\n        this._generateWave9();\n        break;\n      case 10:\n        this._generateWave10();\n        break;\n      default:\n        this._generateInfinite();\n        break;\n    }\n  }\n}\nmodule.exports = EnemyController;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/enemyController.js\n");

/***/ }),

/***/ "./src/scripts/ghost.js":
/*!******************************!*\
  !*** ./src/scripts/ghost.js ***!
  \******************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nconst bulletsPattern = __webpack_require__(/*! ./bPatterns/bulletsPattern4.js */ \"./src/scripts/bPatterns/bulletsPattern4.js\");\nconst Enemy = __webpack_require__(/*! ./enemy */ \"./src/scripts/enemy.js\");\nconst Bullet = __webpack_require__(/*! ./bullet.js */ \"./src/scripts/bullet.js\");\nclass Ghost extends Enemy {\n  constructor(x, y, bc) {\n    let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    super(x, y, bc, options);\n    _defineProperty(this, \"baseHealth\", 20);\n    _defineProperty(this, \"images\", [new Image()]);\n    this.originalSpeed = options.speed || 7;\n    this.healthMultiplier = options.hpMultiplier || 1;\n    this.health = this.baseHealth * this.healthMultiplier;\n    this.maxHp = this.health;\n    this.worth = 200;\n    this.spotX1 = options.spotX1 || 600;\n    this.spotY1 = options.spotY1 || 700;\n    this.spotX2 = options.spotX2 || 600;\n    this.spotY2 = options.spotY2 || 20;\n    this.spots = [[this.spotX1, this.spotY1], [this.spotX2, this.spotY2]];\n    this.height = this.radius * 3;\n    this.updateImages();\n  }\n  updateImages() {\n    this.images.forEach(image => {\n      image.width = this.radius * 2;\n      image.height = this.radius * 3;\n      image.src = `./images/sprites/holloweenSprites/Objects/Ghost2.png`;\n    });\n  }\n  _addBullets() {\n    for (let i = 0; i < Object.keys(bulletsPattern).length; i++) {\n      const params = bulletsPattern[i];\n      this.bullets.push(new Bullet(this.x + this.radius, this.y + this.radius, params));\n    }\n  }\n  draw(ctx) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    if (this.frame >= this.images.length) this.frame = 0;\n    this.shoot(options);\n    this.movementLoop();\n    ctx.shadowColor = this.color;\n    ctx.shadowBlur = 30;\n    ctx.drawImage(this.images[this.frame], this.x, this.y, this.radius * 2, this.radius * 3);\n    this.frame++;\n  }\n  movementLoop() {\n    switch (this.loopLoc) {\n      case 0:\n        this._moveTo(1);\n        break;\n      case 1:\n        this._moveTo(0);\n        break;\n      default:\n        this.loopLoc = 0;\n        break;\n    }\n  }\n}\nmodule.exports = Ghost;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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Q0FBQ1MsTUFBTSxFQUFFLElBQUksQ0FBQ00sS0FBSyxHQUFHLENBQUM7SUFDcEQsSUFBSSxDQUFDQyxLQUFLLENBQUNsQyxPQUFPLENBQUM7SUFDbkIsSUFBSSxDQUFDbUMsWUFBWSxFQUFFO0lBQ25CSCxHQUFHLENBQUNJLFdBQVcsR0FBRyxJQUFJLENBQUNDLEtBQUs7SUFDNUJMLEdBQUcsQ0FBQ00sVUFBVSxHQUFHLEVBQUU7SUFDbkJOLEdBQUcsQ0FBQ08sU0FBUyxDQUNULElBQUksQ0FBQ3JCLE1BQU0sQ0FBQyxJQUFJLENBQUNlLEtBQUssQ0FBQyxFQUN2QixJQUFJLENBQUNwQyxDQUFDLEVBQ04sSUFBSSxDQUFDQyxDQUFDLEVBQ04sSUFBSSxDQUFDa0IsTUFBTSxHQUFHLENBQUMsRUFDZixJQUFJLENBQUNBLE1BQU0sR0FBRyxDQUFDLENBQ2xCO0lBQ0QsSUFBSSxDQUFDaUIsS0FBSyxFQUFFO0VBQ2hCO0VBRUFFLFlBQVksR0FBRztJQUNYLFFBQVEsSUFBSSxDQUFDSyxPQUFPO01BQ2hCLEtBQUssQ0FBQztRQUNGLElBQUksQ0FBQ0MsT0FBTyxDQUFDLENBQUMsQ0FBQztRQUNmO01BQ0osS0FBSyxDQUFDO1FBQ0YsSUFBSSxDQUFDQSxPQUFPLENBQUMsQ0FBQyxDQUFDO1FBQ2Y7TUFDSjtRQUNJLElBQUksQ0FBQ0QsT0FBTyxHQUFHLENBQUM7UUFDaEI7SUFBTTtFQUVsQjtBQUlKO0FBRUFFLE1BQU0sQ0FBQ0MsT0FBTyxHQUFHaEQsS0FBSyIsInNvdXJjZXMiOlsid2VicGFjazovL2pzLy4vc3JjL3NjcmlwdHMvZ2hvc3QuanM/NWNjZSJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBidWxsZXRzUGF0dGVybiA9IHJlcXVpcmUoXCIuL2JQYXR0ZXJucy9idWxsZXRzUGF0dGVybjQuanNcIik7XHJcbmNvbnN0IEVuZW15ID0gcmVxdWlyZShcIi4vZW5lbXlcIik7XHJcbmNvbnN0IEJ1bGxldCA9IHJlcXVpcmUoXCIuL2J1bGxldC5qc1wiKTtcclxuXHJcblxyXG5jbGFzcyBHaG9zdCBleHRlbmRzIEVuZW15IHtcclxuXHJcbiAgICBiYXNlSGVhbHRoID0gMjA7XHJcbiAgICBpbWFnZXMgPSBbXHJcbiAgICAgICAgbmV3IEltYWdlKClcclxuICAgIF1cclxuXHJcbiAgICBjb25zdHJ1Y3Rvcih4LCB5LCBiYywgb3B0aW9ucyA9IHt9KSB7XHJcbiAgICAgICAgc3VwZXIoeCwgeSwgYmMsIG9wdGlvbnMpO1xyXG5cclxuICAgICAgICB0aGlzLm9yaWdpbmFsU3BlZWQgPSBvcHRpb25zLnNwZWVkIHx8IDc7XHJcbiAgICAgICAgdGhpcy5oZWFsdGhNdWx0aXBsaWVyID0gb3B0aW9ucy5ocE11bHRpcGxpZXIgfHwgMTtcclxuICAgICAgICB0aGlzLmhlYWx0aCA9IHRoaXMuYmFzZUhlYWx0aCAqIHRoaXMuaGVhbHRoTXVsdGlwbGllcjtcclxuICAgICAgICB0aGlzLm1heEhwID0gdGhpcy5oZWFsdGhcclxuICAgICAgICB0aGlzLndvcnRoID0gMjAwO1xyXG4gICAgICAgIHRoaXMuc3BvdFgxID0gb3B0aW9ucy5zcG90WDEgfHwgNjAwO1xyXG4gICAgICAgIHRoaXMuc3BvdFkxID0gb3B0aW9ucy5zcG90WTEgfHwgNzAwO1xyXG4gICAgICAgIHRoaXMuc3BvdFgyID0gb3B0aW9ucy5zcG90WDIgfHwgNjAwO1xyXG4gICAgICAgIHRoaXMuc3BvdFkyID0gb3B0aW9ucy5zcG90WTIgfHwgMjA7XHJcbiAgICAgICAgdGhpcy5zcG90cyA9IFtcclxuICAgICAgICAgICAgW3RoaXMuc3BvdFgxLCB0aGlzLnNwb3RZMV0sXHJcbiAgICAgICAgICAgIFt0aGlzLnNwb3RYMiwgdGhpcy5zcG90WTJdXHJcbiAgICAgICAgXVxyXG4gICAgICAgIHRoaXMuaGVpZ2h0ID0gdGhpcy5yYWRpdXMgKiAzXHJcblxyXG4gICAgICAgIHRoaXMudXBkYXRlSW1hZ2VzKCk7XHJcblxyXG4gICAgfVxyXG5cclxuICAgIHVwZGF0ZUltYWdlcygpIHtcclxuICAgICAgICB0aGlzLmltYWdlcy5mb3JFYWNoKChpbWFnZSkgPT4ge1xyXG4gICAgICAgICAgICBpbWFnZS53aWR0aCA9IHRoaXMucmFkaXVzICogMjtcclxuICAgICAgICAgICAgaW1hZ2UuaGVpZ2h0ID0gdGhpcy5yYWRpdXMgKiAzO1xyXG4gICAgICAgICAgICBpbWFnZS5zcmMgPSBgLi9pbWFnZXMvc3ByaXRlcy9ob2xsb3dlZW5TcHJpdGVzL09iamVjdHMvR2hvc3QyLnBuZ2A7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbiAgICBfYWRkQnVsbGV0cygpIHtcclxuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IE9iamVjdC5rZXlzKGJ1bGxldHNQYXR0ZXJuKS5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgICBjb25zdCBwYXJhbXMgPSBidWxsZXRzUGF0dGVybltpXTtcclxuICAgICAgICAgICAgdGhpcy5idWxsZXRzLnB1c2gobmV3IEJ1bGxldCh0aGlzLnggKyB0aGlzLnJhZGl1cywgdGhpcy55ICsgdGhpcy5yYWRpdXMsIHBhcmFtcykpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBkcmF3KGN0eCwgb3B0aW9ucyA9IHt9KSB7XHJcbiAgICAgICAgaWYgKHRoaXMuZnJhbWUgPj0gdGhpcy5pbWFnZXMubGVuZ3RoKSB0aGlzLmZyYW1lID0gMDtcclxuICAgICAgICB0aGlzLnNob290KG9wdGlvbnMpXHJcbiAgICAgICAgdGhpcy5tb3ZlbWVudExvb3AoKTtcclxuICAgICAgICBjdHguc2hhZG93Q29sb3IgPSB0aGlzLmNvbG9yO1xyXG4gICAgICAgIGN0eC5zaGFkb3dCbHVyID0gMzA7XHJcbiAgICAgICAgY3R4LmRyYXdJbWFnZShcclxuICAgICAgICAgICAgdGhpcy5pbWFnZXNbdGhpcy5mcmFtZV0sXHJcbiAgICAgICAgICAgIHRoaXMueCxcclxuICAgICAgICAgICAgdGhpcy55LFxyXG4gICAgICAgICAgICB0aGlzLnJhZGl1cyAqIDIsXHJcbiAgICAgICAgICAgIHRoaXMucmFkaXVzICogM1xyXG4gICAgICAgIClcclxuICAgICAgICB0aGlzLmZyYW1lKys7XHJcbiAgICB9XHJcblxyXG4gICAgbW92ZW1lbnRMb29wKCkge1xyXG4gICAgICAgIHN3aXRjaCAodGhpcy5sb29wTG9jKSB7XHJcbiAgICAgICAgICAgIGNhc2UgMDpcclxuICAgICAgICAgICAgICAgIHRoaXMuX21vdmVUbygxKTtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlIDE6XHJcbiAgICAgICAgICAgICAgICB0aGlzLl9tb3ZlVG8oMCk7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgZGVmYXVsdDpcclxuICAgICAgICAgICAgICAgIHRoaXMubG9vcExvYyA9IDA7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG5cclxuXHJcbn1cclxuXHJcbm1vZHVsZS5leHBvcnRzID0gR2hvc3Q7Il0sIm5hbWVzIjpbImJ1bGxldHNQYXR0ZXJuIiwicmVxdWlyZSIsIkVuZW15IiwiQnVsbGV0IiwiR2hvc3QiLCJjb25zdHJ1Y3RvciIsIngiLCJ5IiwiYmMiLCJvcHRpb25zIiwiSW1hZ2UiLCJvcmlnaW5hbFNwZWVkIiwic3BlZWQiLCJoZWFsdGhNdWx0aXBsaWVyIiwiaHBNdWx0aXBsaWVyIiwiaGVhbHRoIiwiYmFzZUhlYWx0aCIsIm1heEhwIiwid29ydGgiLCJzcG90WDEiLCJzcG90WTEiLCJzcG90WDIiLCJzcG90WTIiLCJzcG90cyIsImhlaWdodCIsInJhZGl1cyIsInVwZGF0ZUltYWdlcyIsImltYWdlcyIsImZvckVhY2giLCJpbWFnZSIsIndpZHRoIiwic3JjIiwiX2FkZEJ1bGxldHMiLCJpIiwiT2JqZWN0Iiwia2V5cyIsImxlbmd0aCIsInBhcmFtcyIsImJ1bGxldHMiLCJwdXNoIiwiZHJhdyIsImN0eCIsImZyYW1lIiwic2hvb3QiLCJtb3ZlbWVudExvb3AiLCJzaGFkb3dDb2xvciIsImNvbG9yIiwic2hhZG93Qmx1ciIsImRyYXdJbWFnZSIsImxvb3BMb2MiLCJfbW92ZVRvIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/scripts/ghost.js\n");

/***/ }),

/***/ "./src/scripts/hud.js":
/*!****************************!*\
  !*** ./src/scripts/hud.js ***!
  \****************************/
/***/ (function(module) {

eval("function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nclass HUD {\n  constructor(canvas, player) {\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    _defineProperty(this, \"images\", {});\n    _defineProperty(this, \"_mouseDown\", e => {\n      e.preventDefault();\n      if (e.button === 0) {\n        this.playerPressedPlay = true;\n        removeEventListener(\"mousedown\", this._mouseDown);\n      }\n      ;\n    });\n    this.canvas = canvas;\n    this.ctx = this.canvas.getContext(\"2d\");\n    this.player = player;\n    this.boss = options.boss || {};\n  }\n  updateImages() {}\n  renderGameover() {\n    //box\n    this.ctx.fillStyle = \"black\";\n    this.ctx.fillRect(0, 280, 1280, 120);\n\n    //text\n    this.ctx.fillStyle = \"#C42B2B\";\n    this.ctx.font = \"50px 'monospace'\";\n    this.ctx.textAlign = 'center';\n    this.ctx.textBaseline = \"alphabetic\";\n    this.ctx.fillText(\"You Died\", 640, 360);\n\n    // press esc to restart\n\n    this.ctx.fillStyle = \"white\";\n    this.ctx.font = \"15px 'monospace'\";\n    this.ctx.fillText(\"Press ESC to restart\", 640, 390);\n  }\n  draw() {\n    // Rendering HP\n    this.ctx.font = \"60px 'monospace'\";\n    this.ctx.textAlign = 'right';\n    this.ctx.fillStyle = \"rgba(255,255,255, 0.2)\";\n    this.ctx.textBaseline = \"bottom\";\n    this.ctx.fillText(`HP: ${this.player.health}`, 1280, 720);\n\n    // ESC to pause\n    this.ctx.font = \"30px 'monospace'\";\n    this.ctx.textAlign = \"right\";\n    this.ctx.fillStyle = \"rgba(255,255,255, 0.2)\";\n    this.ctx.textBaseline = \"top\";\n    this.ctx.fillText(\"ESC to pause\", 1280, 100);\n  }\n  drawBossHp(currentHp, maxHp) {\n    this.ctx.textAlign = \"left\";\n    this.ctx.fillStyle = \"rgba(255,0,0,0.25)\";\n    this.ctx.fillRect(this._scaleWidth(40), this._scaleHeight(10), currentHp / maxHp * this._scaleWidth(1200), this._scaleHeight(22));\n    this.ctx.font = \"32px 'monospace'\";\n    this.ctx.fillStyle = \"rgba(255,222,69,0.25)\";\n    this.ctx.fillText(`Pumpkin Twins`, this._scaleWidth(40), this._scaleHeight(58));\n  }\n  drawTitleScreen() {\n    // Title\n    this.ctx.textBaseline = \"alphabetic\";\n    this.ctx.fillStyle = \"White\";\n    this.ctx.font = \"50px 'monospace'\";\n    this.ctx.textAlign = \"center\";\n    this.ctx.fillText(\"Al Hollow's Bullets\", this._scaleWidth(640), this._scaleHeight(80));\n\n    // Click anywhere to start\n    this.ctx.font = \"22px 'monospace'\";\n    this.ctx.textAlign = \"center\";\n    this.ctx.fillText(\"Click anywhere to start\", this._scaleWidth(640), this._scaleHeight(662.4));\n\n    // WASD\n    const keyGrad = this.ctx.createLinearGradient(0, 0, 0, this._scaleHeight(30));\n    const shiftX = this._scaleWidth(70);\n    const shiftY = this._scaleHeight(30);\n    keyGrad.addColorStop(0, \"#00dd00\");\n    keyGrad.addColorStop(1, \"#ffffff\");\n    this.ctx.strokeStyle = keyGrad;\n\n    //boxes\n    this.ctx.strokeRect(this._scaleWidth(100) + shiftX, this._scaleHeight(300) + shiftY, this._scaleWidth(60), this._scaleHeight(60));\n    this.ctx.strokeRect(this._scaleWidth(0) + shiftX, this._scaleHeight(390) + shiftY, this._scaleWidth(60), this._scaleHeight(60));\n    this.ctx.strokeRect(this._scaleWidth(100) + shiftX, this._scaleHeight(390) + shiftY, this._scaleWidth(60), this._scaleHeight(60));\n    this.ctx.strokeRect(this._scaleWidth(200) + shiftX, this._scaleHeight(390) + shiftY, this._scaleWidth(60), this._scaleHeight(60));\n\n    //WASD\n    this.ctx.font = \"40px 'monospace'\";\n    this.ctx.textAlign = \"left\";\n    this.ctx.strokeText(\"W\", this._scaleWidth(111.5) + shiftX, this._scaleHeight(345) + shiftY);\n    this.ctx.strokeText(\"A\", this._scaleWidth(16) + shiftX, this._scaleHeight(433.5) + shiftY);\n    this.ctx.strokeText(\"S\", this._scaleWidth(118.9) + shiftX, this._scaleHeight(433.5) + shiftY);\n    this.ctx.strokeText(\"D\", this._scaleWidth(216) + shiftX, this._scaleHeight(433.5) + shiftY);\n\n    // Movement controls\n    this.ctx.font = \"30px 'monospace'\";\n    this.ctx.textAlign = \"center\";\n    this.ctx.fillText(\"Movement Controls\", this._scaleWidth(131) + shiftX, this._scaleHeight(200) + shiftY);\n\n    //Up left down right\n    this.ctx.font = \"26px 'monospace'\";\n    this.ctx.fillText(\"UP\", this._scaleWidth(131) + shiftX, this._scaleHeight(280) + shiftY);\n    this.ctx.fillText(\"LEFT\", this._scaleWidth(28) + shiftX, this._scaleHeight(500) + shiftY);\n    this.ctx.fillText(\"DOWN\", this._scaleWidth(131) + shiftX, this._scaleHeight(500) + shiftY);\n    this.ctx.fillText(\"RIGHT\", this._scaleWidth(240) + shiftX, this._scaleHeight(500) + shiftY);\n\n    //Shoot\n    this.ctx.font = \"30px 'monospace'\";\n    this.ctx.fillText(\"Shoot\", this._scaleWidth(660), this._scaleHeight(310));\n\n    // J\n    this.ctx.font = \"40px 'monospace'\";\n    this.ctx.strokeRect(this._scaleWidth(572), this._scaleHeight(345), this._scaleWidth(60), this._scaleHeight(60));\n    this.ctx.strokeText(\"J\", this._scaleWidth(601.5), this._scaleHeight(389));\n\n    //Or\n    this.ctx.font = \"26px 'monospace'\";\n    this.ctx.fillText(\"Or\", this._scaleWidth(666), this._scaleHeight(381));\n\n    //Mouse drawing\n\n    let point1X = this._scaleWidth(670);\n    let point1Y = this._scaleHeight(330);\n    let point2X = this._scaleWidth(780);\n    let point2Y = this._scaleHeight(223);\n\n    //Tail\n    this.ctx.beginPath();\n    this.ctx.moveTo(this._scaleWidth(660), this._scaleHeight(250));\n    this.ctx.bezierCurveTo(point1X, point1Y, point2X, point2Y, this._scaleWidth(760), this._scaleHeight(330));\n    this.ctx.stroke();\n\n    // leftClick MOUSE\n\n    point1X = this._scaleWidth(690);\n    point1Y = this._scaleHeight(320);\n    point2X = this._scaleWidth(700);\n    point2Y = this._scaleHeight(350);\n    this.ctx.beginPath();\n    this.ctx.moveTo(this._scaleWidth(760), this._scaleHeight(330));\n    this.ctx.bezierCurveTo(point1X, point1Y, point2X, point2Y, this._scaleWidth(695), this._scaleHeight(350));\n    this.ctx.stroke();\n    this.ctx.moveTo(this._scaleWidth(696), this._scaleHeight(350));\n    this.ctx.bezierCurveTo(this._scaleWidth(680), 550, this._scaleWidth(800), this._scaleHeight(650), this._scaleWidth(830), this._scaleHeight(350));\n    this.ctx.stroke();\n    this.ctx.moveTo(this._scaleWidth(760), this._scaleHeight(330));\n    this.ctx.bezierCurveTo(this._scaleWidth(825), point1Y, this._scaleWidth(830), point2Y, this._scaleWidth(830), this._scaleHeight(350));\n    this.ctx.stroke();\n    this.ctx.moveTo(this._scaleWidth(695), this._scaleHeight(400));\n    this.ctx.bezierCurveTo(this._scaleWidth(732), this._scaleHeight(385), this._scaleWidth(800), this._scaleHeight(385), this._scaleWidth(824), this._scaleHeight(400));\n    this.ctx.stroke();\n    this.ctx.moveTo(this._scaleWidth(760), this._scaleHeight(330));\n    this.ctx.lineTo(this._scaleWidth(755), this._scaleHeight(390));\n    this.ctx.stroke();\n\n    // Press Release\n    this.ctx.font = \"18px 'monospace'\";\n    this.ctx.fillText(\"Press\", this._scaleWidth(726), this._scaleHeight(363));\n    this.ctx.fillText(\"Release\", this._scaleWidth(793), this._scaleHeight(363));\n\n    //Dodge\n\n    this.ctx.font = \"30px 'monospace'\";\n    this.ctx.fillText(\"Dodge\", this._scaleWidth(860), this._scaleHeight(310));\n\n    //Or\n    this.ctx.font = \"26px 'monospace'\";\n    this.ctx.fillText(\"Or\", this._scaleWidth(860), this._scaleHeight(381));\n\n    //Spacebar\n    this.ctx.strokeRect(this._scaleWidth(882), this._scaleHeight(345), this._scaleWidth(360), this._scaleHeight(60));\n\n    //Release\n    this.ctx.font = \"22px 'monospace'\";\n    this.ctx.fillText(\"Release\", this._scaleWidth(940), this._scaleHeight(380));\n\n    //Important\n    this.ctx.font = \"24px 'monospace'\";\n    this.ctx.fillText(\"* The dodge mechanic triggers upon the release\", this._scaleWidth(1010), this._scaleHeight(550));\n    this.ctx.fillText(\"of either space bar or right-click\", this._scaleWidth(1010), this._scaleHeight(580));\n\n    // Muted\n    this.ctx.font = \"40px 'monospace'\";\n    this.ctx.strokeRect(this._scaleWidth(1200), this._scaleHeight(200), this._scaleWidth(60), this._scaleHeight(60));\n    this.ctx.strokeText(\"M\", this._scaleWidth(1230), this._scaleHeight(243));\n\n    //Toggle sound with\n    this.ctx.font = \"24px 'monospace'\";\n    this.ctx.fillText(\"Toggle sound with\", this._scaleWidth(1096), this._scaleHeight(238));\n\n    // Event listener to continue from title screen to the game\n    addEventListener(\"mousedown\", this._mouseDown);\n  }\n  //Scale any x input with the canvas size (1280x720)\n  _scaleWidth(num) {\n    // return this.canvas.width * num / 1280\n    return num;\n  }\n  //Scale any y input with the canvas size (1280x720)\n  _scaleHeight(num) {\n    // return this.canvas.height * num / 720\n    return num;\n  }\n}\nmodule.exports = HUD;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/hud.js\n");

/***/ }),

/***/ "./src/scripts/player.js":
/*!*******************************!*\
  !*** ./src/scripts/player.js ***!
  \*******************************/
/***/ (function(module) {

eval("function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nclass Player {\n  // 20 frames of invincibility after taking damage\n  // more frames = more POWER!!!\n  // CD on dodge mechanic\n\n  constructor(x, y, bc) {\n    let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    _defineProperty(this, \"iFrames\", 100);\n    _defineProperty(this, \"dodgeFrames\", 15);\n    _defineProperty(this, \"dodgeCd\", 2000);\n    _defineProperty(this, \"mouseMove\", e => {\n      e.preventDefault();\n      this.mouseXloc = e.clientX;\n      this.mouseYloc = e.clientY;\n      this._updateMouse();\n    });\n    _defineProperty(this, \"mouseDown\", k => {\n      // Preventing default to stop highlighting text\n      k.preventDefault();\n      if (k.button === 0) {\n        this.mouseXloc = k.clientX;\n        this.mouseYloc = k.clientY;\n        this.shootPressed = true;\n        this._updateMouse();\n      }\n      // if (k.button === 2) {\n      //     this.dodgePressed = true;\n      // }\n    });\n    _defineProperty(this, \"mouseUp\", k => {\n      if (k.button === 0) this.shootPressed = false;\n      if (k.button === 2) {\n        this.dodgePressed = true;\n      }\n    });\n    _defineProperty(this, \"keyDown\", k => {\n      // console.log(k.code)\n      k.preventDefault();\n      if (k.code === \"KeyW\") this.upPressed = true;\n      if (k.code === \"KeyD\") this.rightPressed = true;\n      if (k.code === \"KeyA\") this.leftPressed = true;\n      if (k.code === \"KeyS\") this.downPressed = true;\n      if (k.code === \"ShiftLeft\") {\n        this.speed = this.speed / 2;\n      }\n      ;\n      if (k.code === \"KeyJ\") this.shootPressed = true;\n      if (k.code === \"KeyM\") {\n        if (this.mutedToggle === 0) {\n          this.muted = !this.muted;\n          this.mutedToggle = 1;\n        }\n      }\n    });\n    _defineProperty(this, \"keyUp\", k => {\n      if (k.code === \"KeyW\") this.upPressed = false;\n      if (k.code === \"KeyD\") this.rightPressed = false;\n      if (k.code === \"KeyA\") this.leftPressed = false;\n      if (k.code === \"KeyS\") this.downPressed = false;\n      if (k.code === \"ShiftLeft\") this.speed = this.oldSpeed;\n      if (k.code === \"Space\") this.dodgePressed = true;\n      if (k.code === \"KeyJ\") this.shootPressed = false;\n      if (k.code === \"KeyM\") this.mutedToggle = 0;\n    });\n    // Must have\n    this.y = y;\n    this.x = x;\n    this.bulletController = bc;\n\n    // Upgradeable: \n    this.speed = 8;\n    this.health = 5;\n    this.bulletDmg = 1;\n    this.bulletDelay = 4;\n    this.bulletSpeed = 20;\n\n    // Defaults\n    this.muted = options.muted || false;\n    this.mutedToggle = 0;\n    this.canvas = options.canvas;\n    this.strokeColor = options.strokeColor || \"white\";\n    this.shootSound = new Audio(\"./sounds/shoot.wav\");\n    this.shootSound.volume = 0.002;\n    this.dodgeTimes = 1;\n    this.height = 20;\n    this.width = 20;\n    this.bulletVelocity = 0.3;\n    this.timeTillNextDamage = 0;\n    this.collideAble = true;\n    this.oldSpeed = this.speed;\n\n    // Inputs from player\n    addEventListener(\"keydown\", this.keyDown);\n    addEventListener(\"keyup\", this.keyUp);\n    addEventListener(\"mousedown\", this.mouseDown);\n    addEventListener(\"mouseup\", this.mouseUp);\n    addEventListener(\"mousemove\", this.mouseMove);\n  }\n\n  // Upgrade the player to make them stronger\n  upgrade() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    this.speed += options.speed || 0;\n    this.health += options.health || 0;\n    this.bulletDmg += options.bulletDmg || 0;\n    this.bulletDelay += options.bulletDelay || 0;\n    this.bulletSpeed += options.bulletSpeed || 0;\n  }\n\n  // Dodge Mechanic\n  dodge() {\n    if (this.canDodge() && !this.dodgeOnCD && this.dodgePressed) {\n      this._dodge();\n      this.collideAble = false;\n    }\n  }\n  canDodge() {\n    return this.dodgeTimes > 0;\n  }\n  _dodge() {\n    this.dodgeTimes--;\n    this.speed *= 2;\n    this.dodgeOnCD = true;\n    setTimeout(() => {\n      this.speed /= 2;\n      this.collideAble = true;\n    }, 1000 / 60 * this.dodgeFrames);\n    setTimeout(() => {\n      this.dodgeOnCD = false;\n      this.dodgeTimes++;\n      this.dodgePressed = false;\n    }, this.dodgeCd);\n  }\n\n  // Shoot mechanic\n  shoot() {\n    if (this.shootPressed) {\n      // Create a bullet if mouse is clicked\n      const bulletX = this.x + Math.floor(this.width / 2);\n      const bulletY = this.y + Math.floor(this.height / 2);\n      const bulletDmg = this.bulletDmg;\n      const bulletSpeed = this.bulletSpeed;\n      const delay = this.bulletDelay;\n      let vector = [this.mouseXV, this.mouseYV];\n      this.bulletController.shoot(bulletX, bulletY, {\n        speed: bulletSpeed,\n        damage: bulletDmg,\n        delay: delay,\n        vector: vector,\n        color: this.color || \"#00AAD3\",\n        shootSoundEff: this.shootSound,\n        bulletVelocity: this.bulletVelocity,\n        muted: this.muted\n      });\n    }\n  }\n  // Draw the player onto the 2d plane\n  draw(ctx) {\n    if (this.damagedState ^ this.blink) {\n      this._draw(ctx);\n    }\n    this.move();\n    this.shoot();\n    this.dodge();\n    if (this.timeTillNextDamage > 0) {\n      this.timeTillNextDamage--;\n      this._blink();\n    } else {\n      this.damagedState = false;\n      this.blink = true;\n    }\n  }\n  _blink() {\n    this.blink = this.blink ? false : true;\n  }\n  _draw(ctx) {\n    ctx.shadowColor = \"green\";\n    ctx.shadowBlur = 30;\n    ctx.strokeStyle = this.strokeColor;\n    ctx.strokeRect(this.x, this.y, this.width, this.height);\n    ctx.fillStyle = \"white\";\n    ctx.fillRect(this.x, this.y, this.width, this.height);\n  }\n  takeDamage(num) {\n    if (this.timeTillNextDamage < 1) {\n      this.collideAble = false;\n      setTimeout(() => {\n        this.collideAble = true;\n      }, 1000 / 60 * this.iFrames);\n      this.health -= num;\n      this.damageState = true;\n      this.timeTillNextDamage = this.iFrames;\n    }\n  }\n\n  // Move the player but not off-screen\n  move() {\n    this._updateMouse();\n    if (this.upPressed) {\n      const oldY = this.y;\n      this.y -= this.speed;\n      if (this.y <= 0) this.y = oldY;\n      this.face = \"up\";\n    }\n    if (this.downPressed) {\n      const oldY = this.y;\n      this.y += this.speed;\n      if (this.y + this.height >= 720) this.y = oldY;\n      this.face = \"down\";\n    }\n    if (this.leftPressed) {\n      const oldX = this.x;\n      this.x -= this.speed;\n      if (this.x <= 0) this.x = oldX;\n      this.face = \"left\";\n    }\n    if (this.rightPressed) {\n      const oldX = this.x;\n      this.x += this.speed;\n      if (this.x + this.width >= 1280) this.x = oldX;\n      this.face = \"right\";\n    }\n  }\n  _updateMouse() {\n    const rect = this.canvas.getBoundingClientRect();\n    this.mouseX = this.mouseXloc - rect.left - this.x - this.width / 2;\n    this.mouseY = this.mouseYloc - rect.top - this.y - this.height / 2;\n    let divisor = Math.max(Math.abs(this.mouseX), Math.abs(this.mouseY));\n    divisor = divisor > 0 && divisor < 1 ? 1 : divisor;\n    divisor = divisor < 0 && divisor > -1 ? -1 : divisor;\n    this.mouseXV = this.mouseX / Math.abs(divisor);\n    this.mouseYV = this.mouseY / Math.abs(divisor);\n  }\n}\nmodule.exports = Player;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/player.js\n");

/***/ }),

/***/ "./src/scripts/seeker.js":
/*!*******************************!*\
  !*** ./src/scripts/seeker.js ***!
  \*******************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nconst bulletsPattern = __webpack_require__(/*! ./bPatterns/bulletsPattern3 */ \"./src/scripts/bPatterns/bulletsPattern3.js\");\nconst Bullet = __webpack_require__(/*! ./bullet */ \"./src/scripts/bullet.js\");\nconst Enemy = __webpack_require__(/*! ./enemy */ \"./src/scripts/enemy.js\");\nclass Seeker extends Enemy {\n  constructor(x, y, bc) {\n    let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    super(x, y, bc, options);\n    _defineProperty(this, \"baseHealth\", 5);\n    _defineProperty(this, \"images\", [new Image()]);\n    this.originalSpeed = options.speed || 7;\n    this.healthMultiplier = options.hpMultiplier || 1;\n    this.health = this.baseHealth * this.healthMultiplier;\n    this.maxHp = this.health;\n    this.worth = 200;\n    this.spotX1 = options.spotX1 || 600;\n    this.spotY1 = options.spotY1 || 700;\n    this.spotX2 = options.spotX2 || 600;\n    this.spotY2 = options.spotY2 || 20;\n    this.spots = [[this.spotX1, this.spotY1], [this.spotX2, this.spotY2]];\n    this.updateImages();\n  }\n  updateImages() {\n    this.images.forEach(image => {\n      image.width = this.radius * 2;\n      image.height = this.radius * 2;\n      image.src = `./images/sprites/holloweenSprites/Objects/Pumpkin4.png`;\n    });\n  }\n  _addBullets() {\n    for (let i = 0; i < Object.keys(bulletsPattern).length; i++) {\n      const params = bulletsPattern[i];\n      this.bullets.push(new Bullet(this.x + this.radius, this.y + this.radius, params));\n    }\n  }\n  draw(ctx) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    if (this.frame >= this.images.length) this.frame = 0;\n    this.shoot(options);\n    this.movementLoop();\n    ctx.shadowColor = this.color;\n    ctx.shadowBlur = 30;\n    ctx.drawImage(this.images[this.frame], this.x, this.y, this.radius * 2, this.radius * 2);\n    this.frame++;\n  }\n  movementLoop() {\n    switch (this.loopLoc) {\n      case 0:\n        this._moveTo(1);\n        break;\n      case 1:\n        this._moveTo(0);\n        break;\n      default:\n        this.loopLoc = 0;\n        break;\n    }\n  }\n}\nmodule.exports = Seeker;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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SSxDQUFDQyxLQUFLLENBQUNsQyxPQUFPLENBQUM7SUFDbkIsSUFBSSxDQUFDbUMsWUFBWSxFQUFFO0lBQ25CSCxHQUFHLENBQUNJLFdBQVcsR0FBRyxJQUFJLENBQUNDLEtBQUs7SUFDNUJMLEdBQUcsQ0FBQ00sVUFBVSxHQUFHLEVBQUU7SUFDbkJOLEdBQUcsQ0FBQ08sU0FBUyxDQUNULElBQUksQ0FBQ3ZCLE1BQU0sQ0FBQyxJQUFJLENBQUNpQixLQUFLLENBQUMsRUFDdkIsSUFBSSxDQUFDcEMsQ0FBQyxFQUNOLElBQUksQ0FBQ0MsQ0FBQyxFQUNOLElBQUksQ0FBQ3NCLE1BQU0sR0FBRyxDQUFDLEVBQ2YsSUFBSSxDQUFDQSxNQUFNLEdBQUcsQ0FBQyxDQUNsQjtJQUNELElBQUksQ0FBQ2EsS0FBSyxFQUFFO0VBQ2hCO0VBRUFFLFlBQVksR0FBRztJQUNYLFFBQVEsSUFBSSxDQUFDSyxPQUFPO01BQ2hCLEtBQUssQ0FBQztRQUNGLElBQUksQ0FBQ0MsT0FBTyxDQUFDLENBQUMsQ0FBQztRQUNmO01BQ0osS0FBSyxDQUFDO1FBQ0YsSUFBSSxDQUFDQSxPQUFPLENBQUMsQ0FBQyxDQUFDO1FBQ2Y7TUFDSjtRQUNJLElBQUksQ0FBQ0QsT0FBTyxHQUFHLENBQUM7UUFDaEI7SUFBTTtFQUVsQjtBQUVKO0FBRUFFLE1BQU0sQ0FBQ0MsT0FBTyxHQUFHaEQsTUFBTSIsInNvdXJjZXMiOlsid2VicGFjazovL2pzLy4vc3JjL3NjcmlwdHMvc2Vla2VyLmpzPzU5YzEiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgYnVsbGV0c1BhdHRlcm4gPSByZXF1aXJlKFwiLi9iUGF0dGVybnMvYnVsbGV0c1BhdHRlcm4zXCIpO1xyXG5jb25zdCBCdWxsZXQgPSByZXF1aXJlKFwiLi9idWxsZXRcIik7XHJcbmNvbnN0IEVuZW15ID0gcmVxdWlyZShcIi4vZW5lbXlcIik7XHJcblxyXG5jbGFzcyBTZWVrZXIgZXh0ZW5kcyBFbmVteSB7XHJcblxyXG5cclxuICAgXHJcbiAgICBiYXNlSGVhbHRoID0gNTtcclxuICAgIGltYWdlcyA9IFtcclxuICAgICAgICBuZXcgSW1hZ2UoKVxyXG4gICAgXVxyXG5cclxuICAgIGNvbnN0cnVjdG9yKHgsIHksIGJjLCBvcHRpb25zID0ge30pIHtcclxuICAgICAgICBzdXBlcih4LCB5LCBiYywgb3B0aW9ucyk7XHJcblxyXG4gICAgICAgIHRoaXMub3JpZ2luYWxTcGVlZCA9IG9wdGlvbnMuc3BlZWQgfHwgNztcclxuICAgICAgICB0aGlzLmhlYWx0aE11bHRpcGxpZXIgPSBvcHRpb25zLmhwTXVsdGlwbGllciB8fCAxO1xyXG4gICAgICAgIHRoaXMuaGVhbHRoID0gdGhpcy5iYXNlSGVhbHRoICogdGhpcy5oZWFsdGhNdWx0aXBsaWVyO1xyXG4gICAgICAgIHRoaXMubWF4SHAgPSB0aGlzLmhlYWx0aFxyXG4gICAgICAgIHRoaXMud29ydGggPSAyMDA7XHJcbiAgICAgICAgdGhpcy5zcG90WDEgPSBvcHRpb25zLnNwb3RYMSB8fCA2MDA7XHJcbiAgICAgICAgdGhpcy5zcG90WTEgPSBvcHRpb25zLnNwb3RZMSB8fCA3MDA7XHJcbiAgICAgICAgdGhpcy5zcG90WDIgPSBvcHRpb25zLnNwb3RYMiB8fCA2MDA7XHJcbiAgICAgICAgdGhpcy5zcG90WTIgPSBvcHRpb25zLnNwb3RZMiB8fCAyMDtcclxuICAgICAgICB0aGlzLnNwb3RzID0gW1xyXG4gICAgICAgICAgICBbdGhpcy5zcG90WDEsIHRoaXMuc3BvdFkxXSxcclxuICAgICAgICAgICAgW3RoaXMuc3BvdFgyLCB0aGlzLnNwb3RZMl1cclxuICAgICAgICBdXHJcblxyXG4gICAgICAgIHRoaXMudXBkYXRlSW1hZ2VzKCk7XHJcblxyXG4gICAgfVxyXG5cclxuICAgIHVwZGF0ZUltYWdlcygpIHtcclxuICAgICAgICB0aGlzLmltYWdlcy5mb3JFYWNoKChpbWFnZSkgPT4ge1xyXG4gICAgICAgICAgICBpbWFnZS53aWR0aCA9IHRoaXMucmFkaXVzICogMjtcclxuICAgICAgICAgICAgaW1hZ2UuaGVpZ2h0ID0gdGhpcy5yYWRpdXMgKiAyO1xyXG4gICAgICAgICAgICBpbWFnZS5zcmMgPSBgLi9pbWFnZXMvc3ByaXRlcy9ob2xsb3dlZW5TcHJpdGVzL09iamVjdHMvUHVtcGtpbjQucG5nYDtcclxuICAgICAgICB9KTtcclxuICAgIH1cclxuICAgIF9hZGRCdWxsZXRzKCkge1xyXG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgT2JqZWN0LmtleXMoYnVsbGV0c1BhdHRlcm4pLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgICAgIGNvbnN0IHBhcmFtcyA9IGJ1bGxldHNQYXR0ZXJuW2ldO1xyXG4gICAgICAgICAgICB0aGlzLmJ1bGxldHMucHVzaChuZXcgQnVsbGV0KHRoaXMueCArIHRoaXMucmFkaXVzLCB0aGlzLnkgKyB0aGlzLnJhZGl1cywgcGFyYW1zKSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGRyYXcoY3R4LCBvcHRpb25zID0ge30pIHtcclxuICAgICAgICBpZiAodGhpcy5mcmFtZSA+PSB0aGlzLmltYWdlcy5sZW5ndGgpIHRoaXMuZnJhbWUgPSAwO1xyXG4gICAgICAgIHRoaXMuc2hvb3Qob3B0aW9ucylcclxuICAgICAgICB0aGlzLm1vdmVtZW50TG9vcCgpO1xyXG4gICAgICAgIGN0eC5zaGFkb3dDb2xvciA9IHRoaXMuY29sb3I7XHJcbiAgICAgICAgY3R4LnNoYWRvd0JsdXIgPSAzMDtcclxuICAgICAgICBjdHguZHJhd0ltYWdlKFxyXG4gICAgICAgICAgICB0aGlzLmltYWdlc1t0aGlzLmZyYW1lXSxcclxuICAgICAgICAgICAgdGhpcy54LFxyXG4gICAgICAgICAgICB0aGlzLnksXHJcbiAgICAgICAgICAgIHRoaXMucmFkaXVzICogMixcclxuICAgICAgICAgICAgdGhpcy5yYWRpdXMgKiAyXHJcbiAgICAgICAgKVxyXG4gICAgICAgIHRoaXMuZnJhbWUrKztcclxuICAgIH1cclxuXHJcbiAgICBtb3ZlbWVudExvb3AoKSB7XHJcbiAgICAgICAgc3dpdGNoICh0aGlzLmxvb3BMb2MpIHtcclxuICAgICAgICAgICAgY2FzZSAwOlxyXG4gICAgICAgICAgICAgICAgdGhpcy5fbW92ZVRvKDEpO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgMTpcclxuICAgICAgICAgICAgICAgIHRoaXMuX21vdmVUbygwKTtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBkZWZhdWx0OlxyXG4gICAgICAgICAgICAgICAgdGhpcy5sb29wTG9jID0gMDtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbn1cclxuXHJcbm1vZHVsZS5leHBvcnRzID0gU2Vla2VyOyJdLCJuYW1lcyI6WyJidWxsZXRzUGF0dGVybiIsInJlcXVpcmUiLCJCdWxsZXQiLCJFbmVteSIsIlNlZWtlciIsImNvbnN0cnVjdG9yIiwieCIsInkiLCJiYyIsIm9wdGlvbnMiLCJJbWFnZSIsIm9yaWdpbmFsU3BlZWQiLCJzcGVlZCIsImhlYWx0aE11bHRpcGxpZXIiLCJocE11bHRpcGxpZXIiLCJoZWFsdGgiLCJiYXNlSGVhbHRoIiwibWF4SHAiLCJ3b3J0aCIsInNwb3RYMSIsInNwb3RZMSIsInNwb3RYMiIsInNwb3RZMiIsInNwb3RzIiwidXBkYXRlSW1hZ2VzIiwiaW1hZ2VzIiwiZm9yRWFjaCIsImltYWdlIiwid2lkdGgiLCJyYWRpdXMiLCJoZWlnaHQiLCJzcmMiLCJfYWRkQnVsbGV0cyIsImkiLCJPYmplY3QiLCJrZXlzIiwibGVuZ3RoIiwicGFyYW1zIiwiYnVsbGV0cyIsInB1c2giLCJkcmF3IiwiY3R4IiwiZnJhbWUiLCJzaG9vdCIsIm1vdmVtZW50TG9vcCIsInNoYWRvd0NvbG9yIiwiY29sb3IiLCJzaGFkb3dCbHVyIiwiZHJhd0ltYWdlIiwibG9vcExvYyIsIl9tb3ZlVG8iLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/scripts/seeker.js\n");

/***/ }),

/***/ "./src/scripts/squish.js":
/*!*******************************!*\
  !*** ./src/scripts/squish.js ***!
  \*******************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nconst bulletsPattern = __webpack_require__(/*! ./bPatterns/bulletsPattern2.js */ \"./src/scripts/bPatterns/bulletsPattern2.js\");\nconst Enemy = __webpack_require__(/*! ./enemy */ \"./src/scripts/enemy.js\");\nconst Bullet = __webpack_require__(/*! ./bullet.js */ \"./src/scripts/bullet.js\");\nclass Squishy extends Enemy {\n  constructor(x, y, bc) {\n    let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    super(x, y, bc, options);\n    _defineProperty(this, \"baseHealth\", 5);\n    _defineProperty(this, \"images\", [new Image()]);\n    this.originalSpeed = options.speed || 7;\n    this.healthMultiplier = options.hpMultiplier || 1;\n    this.health = this.baseHealth * this.healthMultiplier;\n    this.maxHp = this.health;\n    this.worth = 200;\n    this.spotX1 = options.spotX1 || 600;\n    this.spotY1 = options.spotY1 || 700;\n    this.spotX2 = options.spotX2 || 600;\n    this.spotY2 = options.spotY2 || 20;\n    this.spots = [[this.spotX1, this.spotY1], [this.spotX2, this.spotY2]];\n    this.updateImages();\n  }\n  updateImages() {\n    this.images.forEach(image => {\n      image.width = this.radius * 2;\n      image.height = this.radius * 2;\n      image.src = `./images/sprites/holloweenSprites/Objects/Pumpkin1.png`;\n    });\n  }\n  _addBullets() {\n    for (let i = 0; i < Object.keys(bulletsPattern).length; i++) {\n      const params = bulletsPattern[i];\n      this.bullets.push(new Bullet(this.x + this.radius, this.y + this.radius, params));\n    }\n  }\n  draw(ctx) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    if (this.frame >= this.images.length) this.frame = 0;\n    this.shoot(options);\n    this.movementLoop();\n    ctx.shadowColor = this.color;\n    ctx.shadowBlur = 30;\n    ctx.drawImage(this.images[this.frame], this.x, this.y, this.radius * 2, this.radius * 2);\n    this.frame++;\n  }\n  movementLoop() {\n    switch (this.loopLoc) {\n      case 0:\n        this._moveTo(1);\n        break;\n      case 1:\n        this._moveTo(0);\n        break;\n      default:\n        this.loopLoc = 0;\n        break;\n    }\n  }\n}\nmodule.exports = Squishy;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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SSxDQUFDQyxLQUFLLENBQUNsQyxPQUFPLENBQUM7SUFDbkIsSUFBSSxDQUFDbUMsWUFBWSxFQUFFO0lBQ25CSCxHQUFHLENBQUNJLFdBQVcsR0FBRyxJQUFJLENBQUNDLEtBQUs7SUFDNUJMLEdBQUcsQ0FBQ00sVUFBVSxHQUFHLEVBQUU7SUFDbkJOLEdBQUcsQ0FBQ08sU0FBUyxDQUNULElBQUksQ0FBQ3ZCLE1BQU0sQ0FBQyxJQUFJLENBQUNpQixLQUFLLENBQUMsRUFDdkIsSUFBSSxDQUFDcEMsQ0FBQyxFQUNOLElBQUksQ0FBQ0MsQ0FBQyxFQUNOLElBQUksQ0FBQ3NCLE1BQU0sR0FBRyxDQUFDLEVBQ2YsSUFBSSxDQUFDQSxNQUFNLEdBQUcsQ0FBQyxDQUNsQjtJQUNELElBQUksQ0FBQ2EsS0FBSyxFQUFFO0VBQ2hCO0VBRUFFLFlBQVksR0FBRztJQUNYLFFBQVEsSUFBSSxDQUFDSyxPQUFPO01BQ2hCLEtBQUssQ0FBQztRQUNGLElBQUksQ0FBQ0MsT0FBTyxDQUFDLENBQUMsQ0FBQztRQUNmO01BQ0osS0FBSyxDQUFDO1FBQ0YsSUFBSSxDQUFDQSxPQUFPLENBQUMsQ0FBQyxDQUFDO1FBQ2Y7TUFDSjtRQUNJLElBQUksQ0FBQ0QsT0FBTyxHQUFHLENBQUM7UUFDaEI7SUFBTTtFQUVsQjtBQUlKO0FBRUFFLE1BQU0sQ0FBQ0MsT0FBTyxHQUFHaEQsT0FBTyIsInNvdXJjZXMiOlsid2VicGFjazovL2pzLy4vc3JjL3NjcmlwdHMvc3F1aXNoLmpzPzc2MDQiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgYnVsbGV0c1BhdHRlcm4gPSByZXF1aXJlKFwiLi9iUGF0dGVybnMvYnVsbGV0c1BhdHRlcm4yLmpzXCIpO1xyXG5jb25zdCBFbmVteSA9IHJlcXVpcmUoXCIuL2VuZW15XCIpO1xyXG5jb25zdCBCdWxsZXQgPSByZXF1aXJlKFwiLi9idWxsZXQuanNcIik7XHJcblxyXG5cclxuY2xhc3MgU3F1aXNoeSBleHRlbmRzIEVuZW15IHtcclxuXHJcbiAgICBiYXNlSGVhbHRoID0gNTtcclxuICAgIGltYWdlcyA9IFtcclxuICAgICAgICBuZXcgSW1hZ2UoKVxyXG4gICAgXVxyXG5cclxuICAgIGNvbnN0cnVjdG9yKHgsIHksIGJjLCBvcHRpb25zID0ge30pIHtcclxuICAgICAgICBzdXBlcih4LCB5LCBiYywgb3B0aW9ucyk7XHJcblxyXG4gICAgICAgIHRoaXMub3JpZ2luYWxTcGVlZCA9IG9wdGlvbnMuc3BlZWQgfHwgNztcclxuICAgICAgICB0aGlzLmhlYWx0aE11bHRpcGxpZXIgPSBvcHRpb25zLmhwTXVsdGlwbGllciB8fCAxO1xyXG4gICAgICAgIHRoaXMuaGVhbHRoID0gdGhpcy5iYXNlSGVhbHRoICogdGhpcy5oZWFsdGhNdWx0aXBsaWVyO1xyXG4gICAgICAgIHRoaXMubWF4SHAgPSB0aGlzLmhlYWx0aFxyXG4gICAgICAgIHRoaXMud29ydGggPSAyMDA7XHJcbiAgICAgICAgdGhpcy5zcG90WDEgPSBvcHRpb25zLnNwb3RYMSB8fCA2MDA7XHJcbiAgICAgICAgdGhpcy5zcG90WTEgPSBvcHRpb25zLnNwb3RZMSB8fCA3MDA7XHJcbiAgICAgICAgdGhpcy5zcG90WDIgPSBvcHRpb25zLnNwb3RYMiB8fCA2MDA7XHJcbiAgICAgICAgdGhpcy5zcG90WTIgPSBvcHRpb25zLnNwb3RZMiB8fCAyMDtcclxuICAgICAgICB0aGlzLnNwb3RzID0gW1xyXG4gICAgICAgICAgICBbdGhpcy5zcG90WDEsIHRoaXMuc3BvdFkxXSxcclxuICAgICAgICAgICAgW3RoaXMuc3BvdFgyLCB0aGlzLnNwb3RZMl1cclxuICAgICAgICBdXHJcblxyXG4gICAgICAgIHRoaXMudXBkYXRlSW1hZ2VzKCk7XHJcblxyXG4gICAgfVxyXG5cclxuICAgIHVwZGF0ZUltYWdlcygpIHtcclxuICAgICAgICB0aGlzLmltYWdlcy5mb3JFYWNoKChpbWFnZSkgPT4ge1xyXG4gICAgICAgICAgICBpbWFnZS53aWR0aCA9IHRoaXMucmFkaXVzICogMjtcclxuICAgICAgICAgICAgaW1hZ2UuaGVpZ2h0ID0gdGhpcy5yYWRpdXMgKiAyO1xyXG4gICAgICAgICAgICBpbWFnZS5zcmMgPSBgLi9pbWFnZXMvc3ByaXRlcy9ob2xsb3dlZW5TcHJpdGVzL09iamVjdHMvUHVtcGtpbjEucG5nYDtcclxuICAgICAgICB9KTtcclxuICAgIH1cclxuICAgIF9hZGRCdWxsZXRzKCkge1xyXG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgT2JqZWN0LmtleXMoYnVsbGV0c1BhdHRlcm4pLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgICAgIGNvbnN0IHBhcmFtcyA9IGJ1bGxldHNQYXR0ZXJuW2ldO1xyXG4gICAgICAgICAgICB0aGlzLmJ1bGxldHMucHVzaChuZXcgQnVsbGV0KHRoaXMueCArIHRoaXMucmFkaXVzLCB0aGlzLnkgKyB0aGlzLnJhZGl1cywgcGFyYW1zKSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGRyYXcoY3R4LCBvcHRpb25zID0ge30pIHtcclxuICAgICAgICBpZiAodGhpcy5mcmFtZSA+PSB0aGlzLmltYWdlcy5sZW5ndGgpIHRoaXMuZnJhbWUgPSAwO1xyXG4gICAgICAgIHRoaXMuc2hvb3Qob3B0aW9ucylcclxuICAgICAgICB0aGlzLm1vdmVtZW50TG9vcCgpO1xyXG4gICAgICAgIGN0eC5zaGFkb3dDb2xvciA9IHRoaXMuY29sb3I7XHJcbiAgICAgICAgY3R4LnNoYWRvd0JsdXIgPSAzMDtcclxuICAgICAgICBjdHguZHJhd0ltYWdlKFxyXG4gICAgICAgICAgICB0aGlzLmltYWdlc1t0aGlzLmZyYW1lXSxcclxuICAgICAgICAgICAgdGhpcy54LFxyXG4gICAgICAgICAgICB0aGlzLnksXHJcbiAgICAgICAgICAgIHRoaXMucmFkaXVzICogMixcclxuICAgICAgICAgICAgdGhpcy5yYWRpdXMgKiAyXHJcbiAgICAgICAgKVxyXG4gICAgICAgIHRoaXMuZnJhbWUrKztcclxuICAgIH1cclxuXHJcbiAgICBtb3ZlbWVudExvb3AoKSB7XHJcbiAgICAgICAgc3dpdGNoICh0aGlzLmxvb3BMb2MpIHtcclxuICAgICAgICAgICAgY2FzZSAwOlxyXG4gICAgICAgICAgICAgICAgdGhpcy5fbW92ZVRvKDEpO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgMTpcclxuICAgICAgICAgICAgICAgIHRoaXMuX21vdmVUbygwKTtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBkZWZhdWx0OlxyXG4gICAgICAgICAgICAgICAgdGhpcy5sb29wTG9jID0gMDtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcblxyXG5cclxufVxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBTcXVpc2h5OyJdLCJuYW1lcyI6WyJidWxsZXRzUGF0dGVybiIsInJlcXVpcmUiLCJFbmVteSIsIkJ1bGxldCIsIlNxdWlzaHkiLCJjb25zdHJ1Y3RvciIsIngiLCJ5IiwiYmMiLCJvcHRpb25zIiwiSW1hZ2UiLCJvcmlnaW5hbFNwZWVkIiwic3BlZWQiLCJoZWFsdGhNdWx0aXBsaWVyIiwiaHBNdWx0aXBsaWVyIiwiaGVhbHRoIiwiYmFzZUhlYWx0aCIsIm1heEhwIiwid29ydGgiLCJzcG90WDEiLCJzcG90WTEiLCJzcG90WDIiLCJzcG90WTIiLCJzcG90cyIsInVwZGF0ZUltYWdlcyIsImltYWdlcyIsImZvckVhY2giLCJpbWFnZSIsIndpZHRoIiwicmFkaXVzIiwiaGVpZ2h0Iiwic3JjIiwiX2FkZEJ1bGxldHMiLCJpIiwiT2JqZWN0Iiwia2V5cyIsImxlbmd0aCIsInBhcmFtcyIsImJ1bGxldHMiLCJwdXNoIiwiZHJhdyIsImN0eCIsImZyYW1lIiwic2hvb3QiLCJtb3ZlbWVudExvb3AiLCJzaGFkb3dDb2xvciIsImNvbG9yIiwic2hhZG93Qmx1ciIsImRyYXdJbWFnZSIsImxvb3BMb2MiLCJfbW92ZVRvIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/scripts/squish.js\n");

/***/ }),

/***/ "./src/index.scss":
/*!************************!*\
  !*** ./src/index.scss ***!
  \************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguc2Nzcy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9qcy8uL3NyYy9pbmRleC5zY3NzPzk3NDUiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luXG5leHBvcnQge307Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/index.scss\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_require__("./src/index.js");
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.scss");
/******/ 	
/******/ })()
;